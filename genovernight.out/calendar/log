main() {
  Execution directory: genovernight.out/calendar
  Grammar.read {
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate53 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate56 -> $Intermediate55 $VP/NP (SelectFn 1)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate58 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP00 -> $Intermediate72 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP0 -> $Intermediate76 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate77 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate100 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate106 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate127 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate133 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate163 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate166 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate171 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate176 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate181 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate220 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate225 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate230 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate235 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate240 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $Rel0NP; used in rule: $Intermediate246 -> $Rel0NP (JoinFn betaReduce forward (arg0 (lambda r0 (lambda e (call edu.stanford.nlp.sempre.overnight.Simple...(200 total)
    WARNING: Category not defined in the grammar: $Rel0NP; used in rule: $Intermediate251 -> $Rel0NP (JoinFn betaReduce forward (arg0 (lambda r (lambda cp (call edu.stanford.nlp.sempre.overnight.Simple...(209 total)
    WARNING: Category not defined in the grammar: $Rel0NP; used in rule: $Intermediate252 -> $Rel0NP (JoinFn betaReduce forward (arg0 (lambda r (lambda cp (call edu.stanford.nlp.sempre.overnight.Simple...(209 total)
    WARNING: Category not defined in the grammar: $BinaryOp; used in rule: $BinaryOpRight -> $BinaryOp $EntityNP2 (JoinFn betaReduce forward)
    Valid tags: [general, generate, geo440, geo880, parse, regex]
    Used tags: [general, generate]
    369 rules
  }
  Parser: 78 catUnaryRules (sorted), 291 nonCatUnaryRules (in trie)
  Dataset.read {
    Reading overnight/null.examples {
      Example overnight/null.examples:0 (0): [null] => null
    }
  }
  Learner.learn() {
    Iteration 0/0 {
      Processing iter=0.train: 1 examples {
        Examples {
          iter=0.train: example 0/1: overnight/null.examples:0 {
            Example: null {
              Tokens: [null]
              Lemmatized tokens: [null]
              POS tags: [UNK]
              NER tags: [UNK]
              NER values: [UNK]
              Dependency children: []
            }
            Parser.parse: parse {
              WARNING: Currently CatSizeBound is usable only when useSizeInsteadOfDepth = true.
              FloatingParser.infer() {
                SimpleWorld.createWorld: domain = calendar (481 entity/property pairs) 
                Parser.ensureExecuted 
              }
            }
            Parser.setEvaluation: 209 candidates {
              Pred@0000: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) en.meeting.weekly_standup) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) en.meeting.weekly_standup))) (value (list (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of weekly standup and that is location of weekly standup")) [score=15.021, prob=0.275]
              Pred@0001: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.17) (name en.meeting.19) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.35) (name en.meeting.4) (name en.meeting.44) (name en.meeting.47) (name en.meeting.48) (name en.meeting.5) (name en.meeting.50) (name en.meeting.57) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose end time is at least start time of weekly standup")) [score=14.296, prob=0.133]
              Pred@0002: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))))) (value (list (name en.meeting.10) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.21) (name en.meeting.23) (name en.meeting.26) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.42) (name en.meeting.45) (name en.meeting.47) (name en.meeting.54) (name en.meeting.56) (name en.meeting.57) (name en.meeting.7) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is at least start time of weekly standup")) [score=13.327, prob=0.050]
              Pred@0003: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.19) (name en.meeting.20) (name en.meeting.22) (name en.meeting.24) (name en.meeting.25) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.32) (name en.meeting.34) (name en.meeting.35) (name en.meeting.37) (name en.meeting.39) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.55) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is smaller than start time of weekly standup")) [score=13.314, prob=0.050]
              Pred@0004: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))))) (value (list (name en.meeting.17) (name en.meeting.2) (name en.meeting.21) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.42) (name en.meeting.45) (name en.meeting.47) (name en.meeting.7) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose start time is larger than start time of weekly standup")) [score=13.148, prob=0.042]
              Pred@0005: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string length)))))) (value (list)) (type fb:type.any) (canonicalUtterance "meeting whose length is smaller than length of weekly standup")) [score=12.945, prob=0.034]
              Pred@0006: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.18) (name en.meeting.19) (name en.meeting.20) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.32) (name en.meeting.34) (name en.meeting.35) (name en.meeting.37) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is at most start time of weekly standup")) [score=12.775, prob=0.029]
              Pred@0007: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) en.meeting.weekly_standup)))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.17) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.3) (name en.meeting.33) (name en.meeting.36) (name en.meeting.37) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.5) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose location is location that is location of weekly standup")) [score=12.695, prob=0.027]
              Pred@0008: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))))) (value (list (name en.meeting.15) (name en.meeting.16) (name en.meeting.18) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.49) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is smaller than start time of weekly standup")) [score=12.638, prob=0.025]
              Pred@0009: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.42) (name en.meeting.44) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is at least 10am or 3pm")) [score=12.476, prob=0.022]
              Pred@0010: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.42) (name en.meeting.44) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is at least end time of weekly standup")) [score=12.421, prob=0.020]
              Pred@0011: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))))) (value (list (name en.meeting.25) (name en.meeting.35) (name en.meeting.39) (name en.meeting.48) (name en.meeting.49) (name en.meeting.51) (name en.meeting.59) (name en.meeting.6))) (type fb:type.any) (canonicalUtterance "meeting whose start time is smaller than end time of weekly standup")) [score=12.224, prob=0.017]
              Pred@0012: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.hour) (number 1 en.hour)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.37) (name en.meeting.40) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is smaller than three hours or one hour")) [score=11.904, prob=0.012]
              Pred@0013: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) en.meeting.weekly_standup) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) en.meeting.weekly_standup))) (value (list (name en.person.alice))) (type fb:type.any) (canonicalUtterance "person that is attendee of weekly standup and that is attendee of weekly standup")) [score=11.829, prob=0.011]
              Pred@0014: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string length)))))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.18) (name en.meeting.19) (name en.meeting.20) (name en.meeting.21) (name en.meeting.24) (name en.meeting.29) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.37) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is at most length of weekly standup")) [score=11.777, prob=0.011]
              Pred@0015: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.5) (name en.meeting.50) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is at least end time of weekly standup")) [score=11.730, prob=0.010]
              Pred@0016: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of meeting whose length is three hours")) [score=11.703, prob=0.010]
              Pred@0017: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.13) (name en.meeting.17) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.4) (name en.meeting.44) (name en.meeting.47) (name en.meeting.5) (name en.meeting.57) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose end time is larger than start time of weekly standup")) [score=11.655, prob=0.009]
              Pred@0018: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))))) (value (list (name en.meeting.12) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is at most start time of weekly standup")) [score=11.644, prob=0.009]
              Pred@0019: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.5) (name en.meeting.50) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is at least 10am or 3pm")) [score=11.486, prob=0.008]
              Pred@0020: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time))))) (value (list (name en.meeting.10) (name en.meeting.16) (name en.meeting.18) (name en.meeting.23) (name en.meeting.26) (name en.meeting.40) (name en.meeting.54) (name en.meeting.56) (name en.meeting.57) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is start time of weekly standup")) [score=11.452, prob=0.008]
              Pred@0021: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.19) (name en.meeting.20) (name en.meeting.22) (name en.meeting.24) (name en.meeting.25) (name en.meeting.32) (name en.meeting.35) (name en.meeting.37) (name en.meeting.39) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.48) (name en.meeting.49) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.55) (name en.meeting.59) (name en.meeting.6) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is at most end time of weekly standup")) [score=11.434, prob=0.008]
              Pred@0022: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string length)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is at least length of weekly standup")) [score=11.406, prob=0.007]
              Pred@0023: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.35) (name en.meeting.37) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is smaller than 10am or 3pm")) [score=11.321, prob=0.007]
              Pred@0024: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string location) (string =) en.location.greenberg_cafe))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.17) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.3) (name en.meeting.33) (name en.meeting.36) (name en.meeting.37) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.5) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe and whose location is greenberg cafe")) [score=11.309, prob=0.007]
              Pred@0025: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string location) (string =) en.location.greenberg_cafe))) (value (list (name en.meeting.2) (name en.meeting.33) (name en.meeting.36) (name en.meeting.41) (name en.meeting.57) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours and whose location is greenberg cafe")) [score=11.174, prob=0.006]
              Pred@0026: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string length) (string =) (number 3 en.hour)))) (value (list (name en.meeting.14) (name en.meeting.2) (name en.meeting.27) (name en.meeting.33) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.41) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours and whose length is three hours")) [score=11.155, prob=0.006]
              Pred@0027: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.29) (name en.meeting.30) (name en.meeting.32) (name en.meeting.33) (name en.meeting.37) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.43) (name en.meeting.45) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.59) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is at most end time of weekly standup")) [score=11.124, prob=0.006]
              Pred@0028: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe)))) (value (list (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of meeting whose location is greenberg cafe")) [score=11.098, prob=0.005]
              Pred@0029: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))) (value (list (name en.meeting.33))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am and whose length is three hours")) [score=11.053, prob=0.005]
              Pred@0030: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string length) (string =) (number 3 en.hour)))) (value (list (name en.meeting.41))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am and whose length is three hours")) [score=11.048, prob=0.005]
              Pred@0031: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string length) (string =) (number 3 en.hour)))) (value (list (name en.meeting.2) (name en.meeting.33) (name en.meeting.36) (name en.meeting.41) (name en.meeting.57) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe and whose length is three hours")) [score=10.971, prob=0.005]
              Pred@0032: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) en.meeting.weekly_standup)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.28) (name en.meeting.29) (name en.meeting.30) (name en.meeting.32) (name en.meeting.33) (name en.meeting.35) (name en.meeting.37) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is person that is attendee of weekly standup")) [score=10.934, prob=0.005]
              Pred@0033: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string length)))))) (value (list (name en.meeting.10) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.17) (name en.meeting.2) (name en.meeting.22) (name en.meeting.23) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.3) (name en.meeting.33) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.53) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose length is larger than length of weekly standup")) [score=10.815, prob=0.004]
              Pred@0034: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))) (value (list (name en.meeting.11) (name en.meeting.20) (name en.meeting.24) (name en.meeting.37) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.52) (name en.meeting.55) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am and whose location is greenberg cafe")) [score=10.813, prob=0.004]
              Pred@0035: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string location) (string =) en.location.greenberg_cafe))) (value (list (name en.meeting.11) (name en.meeting.17) (name en.meeting.2) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.33) (name en.meeting.37) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.5) (name en.meeting.51) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice and whose location is greenberg cafe")) [score=10.748, prob=0.004]
              Pred@0036: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.3) (name en.meeting.31) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.42) (name en.meeting.44) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose end time is larger than end time of weekly standup")) [score=10.709, prob=0.004]
              Pred@0037: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice)))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of meeting whose attendee is alice")) [score=10.700, prob=0.004]
              Pred@0038: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))))) (value (list (name en.meeting.10) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.21) (name en.meeting.23) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.42) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.5) (name en.meeting.53) (name en.meeting.54) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.7) (name en.meeting.8) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is larger than end time of weekly standup")) [score=10.687, prob=0.004]
              Pred@0039: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string location) (string =) en.location.greenberg_cafe))) (value (list (name en.meeting.25) (name en.meeting.33) (name en.meeting.40) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am and whose location is greenberg cafe")) [score=10.609, prob=0.003]
              Pred@0040: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.3) (name en.meeting.31) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.42) (name en.meeting.44) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose end time is larger than 10am or 3pm")) [score=10.476, prob=0.003]
              Pred@0041: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string end_time) (string =) (time 10 0)))) (value (list (name en.meeting.33))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours and whose end time is 10am")) [score=10.412, prob=0.003]
              Pred@0042: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string start_time) (string =) (time 10 0)))) (value (list (name en.meeting.41))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours and whose start time is 10am")) [score=10.401, prob=0.003]
              Pred@0043: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string length) (string =) (number 3 en.hour)))) (value (list (name en.meeting.14) (name en.meeting.2) (name en.meeting.33) (name en.meeting.35) (name en.meeting.4) (name en.meeting.41) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice and whose length is three hours")) [score=10.347, prob=0.003]
              Pred@0044: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.meeting.weekly_standup en.meeting.annual_review)))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of weekly standup or annual review")) [score=10.337, prob=0.003]
              Pred@0045: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is at most 10am or 3pm")) [score=10.297, prob=0.002]
              Pred@0046: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour))))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of meeting whose length is three hours")) [score=10.278, prob=0.002]
              Pred@0047: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe)))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of meeting whose location is greenberg cafe")) [score=10.144, prob=0.002]
              Pred@0048: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of meeting whose start time is 10am")) [score=10.130, prob=0.002]
              Pred@0049: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string date) (string =) (date 2015 1 2)))) (value (list (name en.meeting.11) (name en.meeting.23) (name en.meeting.36) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.55) (name en.meeting.56))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe and whose date is jan 2")) [score=10.114, prob=0.002]
              Pred@0050: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string attendee))))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.28) (name en.meeting.29) (name en.meeting.30) (name en.meeting.32) (name en.meeting.33) (name en.meeting.35) (name en.meeting.37) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is attendee of weekly standup")) [score=10.100, prob=0.002]
              Pred@0051: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))))) (value (list (name en.meeting.10) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.21) (name en.meeting.23) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.42) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.5) (name en.meeting.53) (name en.meeting.54) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.7) (name en.meeting.8) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is larger than 10am or 3pm")) [score=10.066, prob=0.002]
              Pred@0052: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.hour) (number 1 en.hour)))))) (value (list (name en.meeting.10) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.17) (name en.meeting.2) (name en.meeting.22) (name en.meeting.23) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.3) (name en.meeting.33) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.53) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose length is larger than three hours or one hour")) [score=10.010, prob=0.002]
              Pred@0053: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string start_time) (string =) (time 10 0)))) (value (list (name en.meeting.11) (name en.meeting.20) (name en.meeting.24) (name en.meeting.37) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.52) (name en.meeting.55) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe and whose start time is 10am")) [score=9.912, prob=0.002]
              Pred@0054: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice)))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of meeting whose attendee is alice")) [score=9.896, prob=0.002]
              Pred@0055: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time))))) (value (list (name en.meeting.12) (name en.meeting.14) (name en.meeting.19) (name en.meeting.27) (name en.meeting.28) (name en.meeting.35) (name en.meeting.48) (name en.meeting.50))) (type fb:type.any) (canonicalUtterance "meeting whose end time is start time of weekly standup")) [score=9.894, prob=0.002]
              Pred@0056: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (name en.location.central_office))) (type fb:type.any) (canonicalUtterance "location that is location of the least number of meeting")) [score=9.865, prob=0.002]
              Pred@0057: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time))))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.19) (name en.meeting.20) (name en.meeting.22) (name en.meeting.24) (name en.meeting.32) (name en.meeting.37) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.50) (name en.meeting.52) (name en.meeting.55) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is end time of weekly standup")) [score=9.856, prob=0.002]
              Pred@0058: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string length) (string =) (number 3 en.hour)))) (value (list (name en.meeting.36) (name en.meeting.4))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2 and whose length is three hours")) [score=9.831, prob=0.002]
              Pred@0059: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)))) (value (list (name en.meeting.22) (name en.meeting.52))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am and whose end time is 10am")) [score=9.789, prob=0.001]
              Pred@0060: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string attendee) (string =) en.person.alice))) (value (list (name en.meeting.11) (name en.meeting.17) (name en.meeting.2) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.33) (name en.meeting.37) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.5) (name en.meeting.51) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe and whose attendee is alice")) [score=9.774, prob=0.001]
              Pred@0061: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.hour) (number 1 en.hour)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is at most three hours or one hour")) [score=9.707, prob=0.001]
              Pred@0062: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is at most 10am or 3pm")) [score=9.664, prob=0.001]
              Pred@0063: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.hour) (number 1 en.hour)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is at least three hours or one hour")) [score=9.653, prob=0.001]
              Pred@0064: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))) (value (list (name en.meeting.30))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am and whose date is jan 2")) [score=9.641, prob=0.001]
              Pred@0065: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string attendee) (string =) en.person.alice))) (value (list (name en.meeting.14) (name en.meeting.2) (name en.meeting.33) (name en.meeting.35) (name en.meeting.4) (name en.meeting.41) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours and whose attendee is alice")) [score=9.600, prob=0.001]
              Pred@0066: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))))) (value (list (name en.meeting.32) (name en.meeting.37) (name en.meeting.39) (name en.meeting.41) (name en.meeting.43) (name en.meeting.45) (name en.meeting.59))) (type fb:type.any) (canonicalUtterance "meeting whose end time is smaller than end time of weekly standup")) [score=9.545, prob=0.001]
              Pred@0067: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string date) (string =) (date 2015 1 2)))) (value (list (name en.meeting.11) (name en.meeting.19) (name en.meeting.43) (name en.meeting.55))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am and whose date is jan 2")) [score=9.529, prob=0.001]
              Pred@0068: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time))))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.29) (name en.meeting.30) (name en.meeting.33) (name en.meeting.40) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is end time of weekly standup")) [score=9.519, prob=0.001]
              Pred@0069: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of meeting whose date is jan 2")) [score=9.499, prob=0.001]
              Pred@0070: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string length))))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.18) (name en.meeting.19) (name en.meeting.20) (name en.meeting.21) (name en.meeting.24) (name en.meeting.29) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.37) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is length of weekly standup")) [score=9.482, prob=0.001]
              Pred@0071: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string date) (string =) (date 2015 1 2)))) (value (list (name en.meeting.36) (name en.meeting.4))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours and whose date is jan 2")) [score=9.473, prob=0.001]
              Pred@0072: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of meeting whose end time is 10am")) [score=9.418, prob=0.001]
              Pred@0073: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.24) (name en.meeting.25) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is smaller than 10am or 3pm")) [score=9.417, prob=0.001]
              Pred@0074: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of more than two meeting")) [score=9.413, prob=0.001]
              Pred@0075: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0))))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of meeting whose end time is 10am")) [score=9.384, prob=9.78e-04]
              Pred@0076: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.meeting.weekly_standup en.meeting.annual_review)))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of weekly standup or annual review")) [score=9.333, prob=9.30e-04]
              Pred@0077: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.29) (name en.meeting.30) (name en.meeting.33) (name en.meeting.40) (name en.meeting.51) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am and whose attendee is alice")) [score=9.313, prob=9.11e-04]
              Pred@0078: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string location) (string =) en.location.greenberg_cafe))) (value (list (name en.meeting.11) (name en.meeting.23) (name en.meeting.36) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.55) (name en.meeting.56))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2 and whose location is greenberg cafe")) [score=9.311, prob=9.10e-04]
              Pred@0079: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string end_time) (string =) (time 10 0)))) (value (list (name en.meeting.25) (name en.meeting.33) (name en.meeting.40) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe and whose end time is 10am")) [score=9.285, prob=8.86e-04]
              Pred@0080: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important)) (string location) (string =) en.location.greenberg_cafe))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.17) (name en.meeting.2) (name en.meeting.20) (name en.meeting.3) (name en.meeting.33) (name en.meeting.36) (name en.meeting.37) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.5) (name en.meeting.51) (name en.meeting.55) (name en.meeting.8))) (type fb:type.any) (canonicalUtterance "meeting that is important and whose location is greenberg cafe")) [score=9.266, prob=8.70e-04]
              Pred@0081: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 1 3)))))) (value (list (name en.meeting.11) (name en.meeting.13) (name en.meeting.15) (name en.meeting.16) (name en.meeting.19) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.30) (name en.meeting.32) (name en.meeting.34) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.50) (name en.meeting.51) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose date is smaller than jan 2 or jan 3")) [score=9.261, prob=8.65e-04]
              Pred@0082: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0))))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.19) (name en.meeting.20) (name en.meeting.22) (name en.meeting.24) (name en.meeting.30) (name en.meeting.32) (name en.meeting.33) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.4) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.47) (name en.meeting.50) (name en.meeting.52) (name en.meeting.55) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am or 3pm")) [score=9.253, prob=8.58e-04]
              Pred@0083: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.location.greenberg_cafe en.location.central_office)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe or central office")) [score=9.242, prob=8.49e-04]
              Pred@0084: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important)) (string length) (string =) (number 3 en.hour)))) (value (list (name en.meeting.2) (name en.meeting.33) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4))) (type fb:type.any) (canonicalUtterance "meeting that is important and whose length is three hours")) [score=9.221, prob=8.31e-04]
              Pred@0085: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of at least two meeting")) [score=9.189, prob=8.05e-04]
              Pred@0086: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2))))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of meeting whose date is jan 2")) [score=9.128, prob=7.58e-04]
              Pred@0087: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "person that is attendee of less than two meeting")) [score=9.094, prob=7.32e-04]
              Pred@0088: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (name en.person.alice))) (type fb:type.any) (canonicalUtterance "person that is attendee of the most number of meeting")) [score=9.023, prob=6.82e-04]
              Pred@0089: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string end_time) (string =) (time 10 0)))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.29) (name en.meeting.30) (name en.meeting.33) (name en.meeting.40) (name en.meeting.51) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice and whose end time is 10am")) [score=8.956, prob=6.38e-04]
              Pred@0090: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string date)))))) (value (list (name en.meeting.11) (name en.meeting.13) (name en.meeting.15) (name en.meeting.16) (name en.meeting.19) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.30) (name en.meeting.32) (name en.meeting.34) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.50) (name en.meeting.51) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose date is smaller than date of weekly standup")) [score=8.950, prob=6.34e-04]
              Pred@0091: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 1 3)))))) (value (list (name en.meeting.10) (name en.meeting.12) (name en.meeting.14) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.20) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.31) (name en.meeting.33) (name en.meeting.35) (name en.meeting.37) (name en.meeting.42) (name en.meeting.47) (name en.meeting.5) (name en.meeting.52) (name en.meeting.54) (name en.meeting.58) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is larger than jan 2 or jan 3")) [score=8.932, prob=6.23e-04]
              Pred@0092: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)))) (value (list (name en.meeting.22) (name en.meeting.52))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am and whose start time is 10am")) [score=8.916, prob=6.12e-04]
              Pred@0093: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0))))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of meeting whose start time is 10am")) [score=8.857, prob=5.78e-04]
              Pred@0094: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 1 3)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.4) (name en.meeting.42) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.49) (name en.meeting.5) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.58) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is at least jan 2 or jan 3")) [score=8.827, prob=5.61e-04]
              Pred@0095: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string attendee) (string =) en.person.alice))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.19) (name en.meeting.22) (name en.meeting.24) (name en.meeting.32) (name en.meeting.37) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.55) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am and whose attendee is alice")) [score=8.803, prob=5.47e-04]
              Pred@0096: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string attendee) (string =) en.person.alice))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.28) (name en.meeting.29) (name en.meeting.30) (name en.meeting.32) (name en.meeting.33) (name en.meeting.35) (name en.meeting.37) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice and whose attendee is alice")) [score=8.799, prob=5.45e-04]
              Pred@0097: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important))))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of meeting that is important")) [score=8.776, prob=5.33e-04]
              Pred@0098: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string end_time) (string =) (time 10 0)))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.29) (name en.meeting.30) (name en.meeting.33) (name en.meeting.40) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am and whose end time is 10am")) [score=8.741, prob=5.14e-04]
              Pred@0099: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important))))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of meeting that is important")) [score=8.710, prob=4.99e-04]
              Pred@0100: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string date)))))) (value (list (name en.meeting.10) (name en.meeting.12) (name en.meeting.14) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.20) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.31) (name en.meeting.33) (name en.meeting.35) (name en.meeting.37) (name en.meeting.42) (name en.meeting.47) (name en.meeting.5) (name en.meeting.52) (name en.meeting.54) (name en.meeting.58) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is at least date of weekly standup")) [score=8.623, prob=4.57e-04]
              Pred@0101: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string date) (string =) (date 2015 1 2)))) (value (list (name en.meeting.11) (name en.meeting.13) (name en.meeting.16) (name en.meeting.19) (name en.meeting.23) (name en.meeting.30) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.49) (name en.meeting.55) (name en.meeting.56))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice and whose date is jan 2")) [score=8.562, prob=4.30e-04]
              Pred@0102: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string start_time) (string =) (time 10 0)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.19) (name en.meeting.20) (name en.meeting.22) (name en.meeting.24) (name en.meeting.32) (name en.meeting.37) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.50) (name en.meeting.52) (name en.meeting.55) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am and whose start time is 10am")) [score=8.532, prob=4.17e-04]
              Pred@0103: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string start_time) (string =) (time 10 0)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.19) (name en.meeting.22) (name en.meeting.24) (name en.meeting.32) (name en.meeting.37) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.55) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice and whose start time is 10am")) [score=8.518, prob=4.12e-04]
              Pred@0104: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 en.hour))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.37) (name en.meeting.40) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is smaller than three hours")) [score=8.469, prob=3.92e-04]
              Pred@0105: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of more than two meeting")) [score=8.434, prob=3.78e-04]
              Pred@0106: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string date)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is at most date of weekly standup")) [score=8.402, prob=3.66e-04]
              Pred@0107: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string date)))))) (value (list (name en.meeting.14) (name en.meeting.2) (name en.meeting.20) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.35) (name en.meeting.47) (name en.meeting.5) (name en.meeting.8) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose date is larger than date of weekly standup")) [score=8.387, prob=3.61e-04]
              Pred@0108: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe) (string is_important)))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.17) (name en.meeting.2) (name en.meeting.20) (name en.meeting.3) (name en.meeting.33) (name en.meeting.36) (name en.meeting.37) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.5) (name en.meeting.51) (name en.meeting.55) (name en.meeting.8))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe and that is important")) [score=8.347, prob=3.47e-04]
              Pred@0109: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 1 3)))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is at most jan 2 or jan 3")) [score=8.283, prob=3.25e-04]
              Pred@0110: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string date) (string =) (date 2015 1 2)))) (value (list (name en.meeting.11) (name en.meeting.13) (name en.meeting.16) (name en.meeting.19) (name en.meeting.23) (name en.meeting.30) (name en.meeting.36) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.49) (name en.meeting.55) (name en.meeting.56))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2 and whose date is jan 2")) [score=8.252, prob=3.15e-04]
              Pred@0111: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of the most number of meeting")) [score=8.222, prob=3.06e-04]
              Pred@0112: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of at least two meeting")) [score=8.219, prob=3.05e-04]
              Pred@0113: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string attendee) (string =) en.person.alice))) (value (list (name en.meeting.11) (name en.meeting.13) (name en.meeting.16) (name en.meeting.19) (name en.meeting.23) (name en.meeting.30) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.49) (name en.meeting.55) (name en.meeting.56))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2 and whose attendee is alice")) [score=8.161, prob=2.88e-04]
              Pred@0114: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice) (string is_important)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.17) (name en.meeting.2) (name en.meeting.21) (name en.meeting.22) (name en.meeting.29) (name en.meeting.32) (name en.meeting.33) (name en.meeting.37) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.55) (name en.meeting.6) (name en.meeting.8))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice and that is important")) [score=8.113, prob=2.74e-04]
              Pred@0115: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "location that is location of less than two meeting")) [score=8.077, prob=2.65e-04]
              Pred@0116: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) en.meeting.weekly_standup))) (value (list (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location that is location of weekly standup")) [score=8.061, prob=2.61e-04]
              Pred@0117: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)) (string is_important)))) (value (list (name en.meeting.2) (name en.meeting.33) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours and that is important")) [score=8.020, prob=2.50e-04]
              Pred@0118: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is attendee of the least number of meeting")) [score=7.996, prob=2.44e-04]
              Pred@0119: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 en.hour))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is at most three hours")) [score=7.976, prob=2.39e-04]
              Pred@0120: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (time 10 0))))) (value (list (name en.meeting.32) (name en.meeting.37) (name en.meeting.39) (name en.meeting.41) (name en.meeting.43) (name en.meeting.45) (name en.meeting.59))) (type fb:type.any) (canonicalUtterance "meeting whose end time is smaller than 10am")) [score=7.893, prob=2.20e-04]
              Pred@0121: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 en.hour))))) (value (list)) (type fb:type.any) (canonicalUtterance "meeting whose length is larger than three hours")) [score=7.882, prob=2.18e-04]
              Pred@0122: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 en.hour))))) (value (list (name en.meeting.14) (name en.meeting.2) (name en.meeting.27) (name en.meeting.33) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.41) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose length is at least three hours")) [score=7.871, prob=2.15e-04]
              Pred@0123: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important)) (string start_time) (string =) (time 10 0)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.20) (name en.meeting.22) (name en.meeting.32) (name en.meeting.37) (name en.meeting.43) (name en.meeting.55))) (type fb:type.any) (canonicalUtterance "meeting that is important and whose start time is 10am")) [score=7.801, prob=2.01e-04]
              Pred@0124: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string location))))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.17) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.3) (name en.meeting.33) (name en.meeting.36) (name en.meeting.37) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.5) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose location is location of weekly standup")) [score=7.797, prob=2.00e-04]
              Pred@0125: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "location that is location of two meeting")) [score=7.715, prob=1.84e-04]
              Pred@0126: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "location that is location of at most two meeting")) [score=7.705, prob=1.82e-04]
              Pred@0127: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time))))) (value (list (name en.meeting.30) (name en.meeting.33) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.42) (name en.meeting.45) (name en.meeting.47))) (type fb:type.any) (canonicalUtterance "meeting that has the largest start time")) [score=7.698, prob=1.81e-04]
              Pred@0128: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)) (string is_important)))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.29) (name en.meeting.33) (name en.meeting.51))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am and that is important")) [score=7.631, prob=1.69e-04]
              Pred@0129: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string !=) en.meeting.weekly_standup))) (value (list (name en.person.bob))) (type fb:type.any) (canonicalUtterance "person that is not attendee of weekly standup")) [score=7.621, prob=1.68e-04]
              Pred@0130: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2015 1 2))))) (value (list (name en.meeting.15) (name en.meeting.21) (name en.meeting.22) (name en.meeting.32) (name en.meeting.34) (name en.meeting.38) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.44) (name en.meeting.48) (name en.meeting.50) (name en.meeting.51) (name en.meeting.53) (name en.meeting.57) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose date is smaller than jan 2")) [score=7.563, prob=1.58e-04]
              Pred@0131: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important)) (string attendee) (string =) en.person.alice))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.17) (name en.meeting.2) (name en.meeting.21) (name en.meeting.22) (name en.meeting.29) (name en.meeting.32) (name en.meeting.33) (name en.meeting.37) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.55) (name en.meeting.6) (name en.meeting.8))) (type fb:type.any) (canonicalUtterance "meeting that is important and whose attendee is alice")) [score=7.538, prob=1.54e-04]
              Pred@0132: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0))))) (value (list (name en.meeting.10) (name en.meeting.13) (name en.meeting.17) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.25) (name en.meeting.26) (name en.meeting.29) (name en.meeting.30) (name en.meeting.33) (name en.meeting.4) (name en.meeting.40) (name en.meeting.44) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am or 3pm")) [score=7.503, prob=1.49e-04]
              Pred@0133: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string start_time) (string =) (time 10 0)))) (value (list (name en.meeting.11) (name en.meeting.19) (name en.meeting.43) (name en.meeting.55))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2 and whose start time is 10am")) [score=7.466, prob=1.44e-04]
              Pred@0134: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string location)) (string !=) en.meeting.weekly_standup))) (value (list (name en.location.central_office))) (type fb:type.any) (canonicalUtterance "location that is not location of weekly standup")) [score=7.451, prob=1.42e-04]
              Pred@0135: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.hour) (number 1 en.hour))))) (value (list (name en.meeting.11) (name en.meeting.14) (name en.meeting.15) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.24) (name en.meeting.27) (name en.meeting.29) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.41) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours or one hour")) [score=7.401, prob=1.35e-04]
              Pred@0136: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string is_important)))) (value (list (name en.meeting.11) (name en.meeting.36) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.49) (name en.meeting.55))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2 and that is important")) [score=7.380, prob=1.32e-04]
              Pred@0137: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string !=) (number 3 en.hour)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.37) (name en.meeting.40) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose length is not three hours")) [score=7.374, prob=1.31e-04]
              Pred@0138: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string date))))) (value (list (name en.meeting.10) (name en.meeting.12) (name en.meeting.17) (name en.meeting.18) (name en.meeting.24) (name en.meeting.31) (name en.meeting.33) (name en.meeting.37) (name en.meeting.42) (name en.meeting.52) (name en.meeting.54) (name en.meeting.58) (name en.meeting.6) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is date of weekly standup")) [score=7.318, prob=1.24e-04]
              Pred@0139: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)) (string is_important)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.20) (name en.meeting.22) (name en.meeting.32) (name en.meeting.37) (name en.meeting.43) (name en.meeting.55))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am and that is important")) [score=7.266, prob=1.18e-04]
              Pred@0140: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice or bob")) [score=7.256, prob=1.16e-04]
              Pred@0141: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string <) (number 2)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has less than two location")) [score=7.246, prob=1.15e-04]
              Pred@0142: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important)) (string end_time) (string =) (time 10 0)))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.29) (name en.meeting.33) (name en.meeting.51))) (type fb:type.any) (canonicalUtterance "meeting that is important and whose end time is 10am")) [score=7.223, prob=1.13e-04]
              Pred@0143: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)) (string end_time) (string =) (time 10 0)))) (value (list (name en.meeting.30))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2 and whose end time is 10am")) [score=7.180, prob=1.08e-04]
              Pred@0144: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (time 10 0))))) (value (list (name en.meeting.25) (name en.meeting.35) (name en.meeting.39) (name en.meeting.48) (name en.meeting.49) (name en.meeting.51) (name en.meeting.59) (name en.meeting.6))) (type fb:type.any) (canonicalUtterance "meeting whose start time is smaller than 10am")) [score=7.177, prob=1.08e-04]
              Pred@0145: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (time 10 0))))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.19) (name en.meeting.20) (name en.meeting.22) (name en.meeting.24) (name en.meeting.25) (name en.meeting.32) (name en.meeting.35) (name en.meeting.37) (name en.meeting.39) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.48) (name en.meeting.49) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.55) (name en.meeting.59) (name en.meeting.6) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is at most 10am")) [score=7.134, prob=1.03e-04]
              Pred@0146: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (time 10 0))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.42) (name en.meeting.44) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is at least 10am")) [score=7.072, prob=9.69e-05]
              Pred@0147: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (time 10 0))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.3) (name en.meeting.31) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.42) (name en.meeting.44) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose end time is larger than 10am")) [score=7.021, prob=9.21e-05]
              Pred@0148: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string <) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "meeting that has less than two attendee")) [score=6.955, prob=8.62e-05]
              Pred@0149: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (time 10 0))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.5) (name en.meeting.50) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is at least 10am")) [score=6.914, prob=8.27e-05]
              Pred@0150: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string min) (string attendee)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has the least number of attendee")) [score=6.875, prob=7.96e-05]
              Pred@0151: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length) (string =) (number 3 en.hour)))) (value (list (name en.meeting.14) (name en.meeting.2) (name en.meeting.27) (name en.meeting.33) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.41) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose length is three hours")) [score=6.837, prob=7.66e-05]
              Pred@0152: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important)) (string date) (string =) (date 2015 1 2)))) (value (list (name en.meeting.11) (name en.meeting.36) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.49) (name en.meeting.55))) (type fb:type.any) (canonicalUtterance "meeting that is important and whose date is jan 2")) [score=6.835, prob=7.65e-05]
              Pred@0153: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 1 3))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.23) (name en.meeting.24) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.36) (name en.meeting.37) (name en.meeting.4) (name en.meeting.42) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.49) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.58) (name en.meeting.6) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2 or jan 3")) [score=6.820, prob=7.53e-05]
              Pred@0154: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (time 10 0))))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.29) (name en.meeting.30) (name en.meeting.32) (name en.meeting.33) (name en.meeting.37) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.43) (name en.meeting.45) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.59) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is at most 10am")) [score=6.755, prob=7.06e-05]
              Pred@0155: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string max) (string attendee)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has the most number of attendee")) [score=6.753, prob=7.04e-05]
              Pred@0156: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string >) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "meeting that has more than two attendee")) [score=6.743, prob=6.97e-05]
              Pred@0157: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2015 1 2))))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.4) (name en.meeting.42) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.49) (name en.meeting.5) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.58) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is at least jan 2")) [score=6.697, prob=6.66e-05]
              Pred@0158: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string !=) en.location.greenberg_cafe))) (value (list (name en.meeting.10) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.18) (name en.meeting.19) (name en.meeting.21) (name en.meeting.22) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.35) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.47) (name en.meeting.49) (name en.meeting.50) (name en.meeting.53) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose location is not greenberg cafe")) [score=6.676, prob=6.52e-05]
              Pred@0159: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2015 1 2))))) (value (list (name en.meeting.10) (name en.meeting.12) (name en.meeting.14) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.20) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.31) (name en.meeting.33) (name en.meeting.35) (name en.meeting.37) (name en.meeting.42) (name en.meeting.47) (name en.meeting.5) (name en.meeting.52) (name en.meeting.54) (name en.meeting.58) (name en.meeting.6) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is larger than jan 2")) [score=6.658, prob=6.41e-05]
              Pred@0160: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string min) (string location)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has the least number of location")) [score=6.584, prob=5.95e-05]
              Pred@0161: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length))))) (value (list (name en.meeting.14) (name en.meeting.2) (name en.meeting.27) (name en.meeting.33) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.41) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting that has the largest length")) [score=6.496, prob=5.45e-05]
              Pred@0162: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string !=) (time 10 0)))) (value (list (name en.meeting.10) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.21) (name en.meeting.23) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.42) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.53) (name en.meeting.54) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is not 10am")) [score=6.480, prob=5.36e-05]
              Pred@0163: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) (number 2)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has two attendee")) [score=6.469, prob=5.30e-05]
              Pred@0164: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2015 1 2))))) (value (list (name en.meeting.11) (name en.meeting.13) (name en.meeting.15) (name en.meeting.16) (name en.meeting.19) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.30) (name en.meeting.32) (name en.meeting.34) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.49) (name en.meeting.50) (name en.meeting.51) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting whose date is at most jan 2")) [score=6.386, prob=4.88e-05]
              Pred@0165: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string >) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "meeting that has more than two location")) [score=6.268, prob=4.34e-05]
              Pred@0166: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) en.location.greenberg_cafe))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.17) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.3) (name en.meeting.33) (name en.meeting.36) (name en.meeting.37) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.48) (name en.meeting.5) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose location is greenberg cafe")) [score=6.214, prob=4.11e-05]
              Pred@0167: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string !=) (time 10 0)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.23) (name en.meeting.24) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.3) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review))) (type fb:type.any) (canonicalUtterance "meeting whose end time is not 10am")) [score=6.192, prob=4.02e-05]
              Pred@0168: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string >=) (number 2)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has at least two attendee")) [score=6.188, prob=4.00e-05]
              Pred@0169: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "person that is attendee of at most two meeting")) [score=6.139, prob=3.81e-05]
              Pred@0170: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string >=) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "meeting that has at least two location")) [score=6.081, prob=3.60e-05]
              Pred@0171: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) en.meeting.weekly_standup))) (value (list (name en.person.alice))) (type fb:type.any) (canonicalUtterance "person that is attendee of weekly standup")) [score=6.066, prob=3.54e-05]
              Pred@0172: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string start_time)))) (value (list (time 13 0))) (type fb:type.any) (canonicalUtterance "start time of weekly standup")) [score=6.026, prob=3.41e-05]
              Pred@0173: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string attendee)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "person that is attendee of two meeting")) [score=6.016, prob=3.37e-05]
              Pred@0174: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time))))) (value (list (name en.meeting.10) (name en.meeting.13) (name en.meeting.17) (name en.meeting.23) (name en.meeting.26) (name en.meeting.4) (name en.meeting.44) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting that has the largest end time")) [score=5.955, prob=3.17e-05]
              Pred@0175: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string <=) (number 2)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has at most two location")) [score=5.901, prob=3.01e-05]
              Pred@0176: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important)) (string is_important)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.15) (name en.meeting.17) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.29) (name en.meeting.3) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.55) (name en.meeting.6) (name en.meeting.8))) (type fb:type.any) (canonicalUtterance "meeting that is important and that is important")) [score=5.867, prob=2.90e-05]
              Pred@0177: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string max) (string location)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has the most number of location")) [score=5.853, prob=2.86e-05]
              Pred@0178: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string sum) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length))))) (value (list (number 6 en.hour))) (type fb:type.any) (canonicalUtterance "total length of meeting")) [score=5.701, prob=2.46e-05]
              Pred@0179: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string location) (string =) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "meeting that has two location")) [score=5.536, prob=2.09e-05]
              Pred@0180: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time))))) (value (list (name en.meeting.25) (name en.meeting.35) (name en.meeting.39) (name en.meeting.48) (name en.meeting.49) (name en.meeting.51) (name en.meeting.59) (name en.meeting.6))) (type fb:type.any) (canonicalUtterance "meeting that has the smallest start time")) [score=5.480, prob=1.97e-05]
              Pred@0181: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string <=) (number 2)))) (value (list (name en.meeting.10) (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has at most two attendee")) [score=5.445, prob=1.90e-05]
              Pred@0182: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string start_time)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (time 10 0))))) (value (list (name en.meeting.10) (name en.meeting.13) (name en.meeting.14) (name en.meeting.15) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.21) (name en.meeting.23) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.30) (name en.meeting.31) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.38) (name en.meeting.4) (name en.meeting.40) (name en.meeting.42) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.5) (name en.meeting.53) (name en.meeting.54) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.7) (name en.meeting.8) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose start time is larger than 10am")) [score=5.365, prob=1.76e-05]
              Pred@0183: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string =) en.person.alice))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.13) (name en.meeting.14) (name en.meeting.16) (name en.meeting.17) (name en.meeting.18) (name en.meeting.19) (name en.meeting.2) (name en.meeting.21) (name en.meeting.22) (name en.meeting.23) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.28) (name en.meeting.29) (name en.meeting.30) (name en.meeting.32) (name en.meeting.33) (name en.meeting.35) (name en.meeting.37) (name en.meeting.4) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.43) (name en.meeting.44) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.53) (name en.meeting.55) (name en.meeting.56) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is alice")) [score=5.307, prob=1.66e-05]
              Pred@0184: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string end_time))))) (value (list (name en.meeting.32) (name en.meeting.37) (name en.meeting.39) (name en.meeting.41) (name en.meeting.43) (name en.meeting.45) (name en.meeting.59))) (type fb:type.any) (canonicalUtterance "meeting that has the smallest end time")) [score=5.262, prob=1.59e-05]
              Pred@0185: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.location.greenberg_cafe en.location.central_office))) (value (list (name en.location.central_office) (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "greenberg cafe or central office")) [score=5.144, prob=1.41e-05]
              Pred@0186: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string attendee) (string !=) en.person.alice))) (value (list (name en.meeting.10) (name en.meeting.15) (name en.meeting.20) (name en.meeting.27) (name en.meeting.3) (name en.meeting.31) (name en.meeting.34) (name en.meeting.36) (name en.meeting.38) (name en.meeting.39) (name en.meeting.50) (name en.meeting.52) (name en.meeting.54))) (type fb:type.any) (canonicalUtterance "meeting whose attendee is not alice")) [score=5.070, prob=1.31e-05]
              Pred@0187: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string start_time) (string =) (time 10 0)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.19) (name en.meeting.20) (name en.meeting.22) (name en.meeting.24) (name en.meeting.32) (name en.meeting.37) (name en.meeting.41) (name en.meeting.43) (name en.meeting.44) (name en.meeting.50) (name en.meeting.52) (name en.meeting.55) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting whose start time is 10am")) [score=5.046, prob=1.28e-05]
              Pred@0188: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string !=) (date 2015 1 2)))) (value (list (name en.meeting.10) (name en.meeting.12) (name en.meeting.14) (name en.meeting.15) (name en.meeting.17) (name en.meeting.18) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.24) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.31) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.35) (name en.meeting.37) (name en.meeting.38) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.42) (name en.meeting.44) (name en.meeting.47) (name en.meeting.48) (name en.meeting.5) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.53) (name en.meeting.54) (name en.meeting.57) (name en.meeting.58) (name en.meeting.59) (name en.meeting.6) (name en.meeting.7) (name en.meeting.8) (name en.meeting.9) (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose date is not jan 2")) [score=5.018, prob=1.24e-05]
              Pred@0189: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string end_time) (string =) (time 10 0)))) (value (list (name en.meeting.21) (name en.meeting.22) (name en.meeting.25) (name en.meeting.29) (name en.meeting.30) (name en.meeting.33) (name en.meeting.40) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting whose end time is 10am")) [score=4.968, prob=1.18e-05]
              Pred@0190: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string attendee)))) (value (list (name en.person.alice))) (type fb:type.any) (canonicalUtterance "attendee of weekly standup")) [score=4.930, prob=1.14e-05]
              Pred@0191: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date))))) (value (list (name en.meeting.14) (name en.meeting.2) (name en.meeting.20) (name en.meeting.25) (name en.meeting.26) (name en.meeting.27) (name en.meeting.28) (name en.meeting.29) (name en.meeting.3) (name en.meeting.35) (name en.meeting.47) (name en.meeting.5) (name en.meeting.8) (name en.meeting.9))) (type fb:type.any) (canonicalUtterance "meeting that has the largest date")) [score=4.886, prob=1.09e-05]
              Pred@0192: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.meeting.weekly_standup en.meeting.annual_review))) (value (list (name en.meeting.annual_review) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "weekly standup or annual review")) [score=4.815, prob=1.01e-05]
              Pred@0193: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string date))))) (value (list (name en.meeting.15) (name en.meeting.21) (name en.meeting.22) (name en.meeting.32) (name en.meeting.34) (name en.meeting.38) (name en.meeting.39) (name en.meeting.40) (name en.meeting.41) (name en.meeting.44) (name en.meeting.48) (name en.meeting.50) (name en.meeting.51) (name en.meeting.53) (name en.meeting.57) (name en.meeting.59) (name en.meeting.7))) (type fb:type.any) (canonicalUtterance "meeting that has the smallest date")) [score=4.665, prob=8.73e-06]
              Pred@0194: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string length))))) (value (list (number 2 en.hour))) (type fb:type.any) (canonicalUtterance "average length of meeting")) [score=4.617, prob=8.32e-06]
              Pred@0195: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string end_time)))) (value (list (time 10 0))) (type fb:type.any) (canonicalUtterance "end time of weekly standup")) [score=4.610, prob=8.26e-06]
              Pred@0196: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string length))))) (value (list (name en.meeting.11) (name en.meeting.15) (name en.meeting.18) (name en.meeting.19) (name en.meeting.20) (name en.meeting.21) (name en.meeting.24) (name en.meeting.29) (name en.meeting.30) (name en.meeting.31) (name en.meeting.32) (name en.meeting.34) (name en.meeting.37) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.50) (name en.meeting.51) (name en.meeting.52) (name en.meeting.54) (name en.meeting.55) (name en.meeting.56) (name en.meeting.8) (name en.meeting.9) (name en.meeting.weekly_standup))) (type fb:type.any) (canonicalUtterance "meeting that has the smallest length")) [score=4.511, prob=7.48e-06]
              Pred@0197: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string date) (string =) (date 2015 1 2)))) (value (list (name en.meeting.11) (name en.meeting.13) (name en.meeting.16) (name en.meeting.19) (name en.meeting.23) (name en.meeting.30) (name en.meeting.36) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.49) (name en.meeting.55) (name en.meeting.56))) (type fb:type.any) (canonicalUtterance "meeting whose date is jan 2")) [score=4.417, prob=6.81e-06]
              Pred@0198: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type)) (string is_important)))) (value (list (name en.meeting.11) (name en.meeting.12) (name en.meeting.15) (name en.meeting.17) (name en.meeting.2) (name en.meeting.20) (name en.meeting.21) (name en.meeting.22) (name en.meeting.29) (name en.meeting.3) (name en.meeting.32) (name en.meeting.33) (name en.meeting.34) (name en.meeting.36) (name en.meeting.37) (name en.meeting.38) (name en.meeting.4) (name en.meeting.43) (name en.meeting.45) (name en.meeting.46) (name en.meeting.47) (name en.meeting.48) (name en.meeting.49) (name en.meeting.5) (name en.meeting.51) (name en.meeting.55) (name en.meeting.6) (name en.meeting.8))) (type fb:type.any) (canonicalUtterance "meeting that is important")) [score=4.356, prob=6.41e-06]
              Pred@0199: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.meeting) (string !type))))) (value (list (number 60 count))) (type fb:type.any) (canonicalUtterance "number of meeting")) [score=3.984, prob=4.42e-06]
              Pred@0200: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string length)))) (value (list (number 1 en.hour))) (type fb:type.any) (canonicalUtterance "length of weekly standup")) [score=3.828, prob=3.78e-06]
              Pred@0201: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.hour) (number 1 en.hour)))) (value (list (number 1 en.hour) (number 3 en.hour))) (type fb:type.any) (canonicalUtterance "three hours or one hour")) [score=3.728, prob=3.42e-06]
              Pred@0202: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string location)))) (value (list (name en.location.greenberg_cafe))) (type fb:type.any) (canonicalUtterance "location of weekly standup")) [score=3.466, prob=2.63e-06]
              Pred@0203: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.location) (string !type))))) (value (list (number 2 count))) (type fb:type.any) (canonicalUtterance "number of location")) [score=3.386, prob=2.43e-06]
              Pred@0204: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))) (value (list (number 2 count))) (type fb:type.any) (canonicalUtterance "number of person")) [score=3.280, prob=2.18e-06]
              Pred@0205: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 1 3)))) (value (list (date 2015 1 2) (date 2015 1 3))) (type fb:type.any) (canonicalUtterance "jan 2 or jan 3")) [score=3.221, prob=2.06e-06]
              Pred@0206: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (time 10 0) (time 15 0)))) (value (list (time 10 0) (time 15 0))) (type fb:type.any) (canonicalUtterance "10am or 3pm")) [score=3.219, prob=2.06e-06]
              Pred@0207: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.meeting.weekly_standup (string date)))) (value (list (date 2015 1 3))) (type fb:type.any) (canonicalUtterance "date of weekly standup")) [score=3.143, prob=1.91e-06]
              Pred@0208: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob))) (value (list (name en.person.alice) (name en.person.bob))) (type fb:type.any) (canonicalUtterance "alice or bob")) [score=2.541, prob=1.04e-06]
            }
            Current: correct=0 oracle=0 partCorrect=0 partOracle=0 parsed=1 numCandidates=209 parsedNumCandidates=209 timeout=0 numTokens=1 parseTime=837 maxCellSize=144 fallOffBeam=0 totalDerivs=0 numOfFeaturizedDerivs=5022 numCells=411
            Cumulative(iter=0.train): correct=0 oracle=0 partCorrect=0 partOracle=0 parsed=1 numCandidates=209 parsedNumCandidates=209 timeout=0 numTokens=1 parseTime=837 maxCellSize=144 fallOffBeam=0 totalDerivs=0 numOfFeaturizedDerivs=5022 numCells=411
          }
        }
        Stats for iter=0.train: correct=0 oracle=0 partCorrect=0 partOracle=0 parsed=1 numCandidates=209 parsedNumCandidates=209 timeout=0 numTokens=1 parseTime=837 maxCellSize=144 fallOffBeam=0 totalDerivs=0 numOfFeaturizedDerivs=5022 numCells=411
        Evaluation stats for iter=0.train {
          correct = 0/ << 0 ~ 0 >> /0 (1)
          oracle = 0/ << 0 ~ 0 >> /0 (1)
          partCorrect = 0/ << 0 ~ 0 >> /0 (1)
          partOracle = 0/ << 0 ~ 0 >> /0 (1)
          parsed = 1/ << 1 ~ 0 >> /1 (1)
          numCandidates = 209/ << 209 ~ 0 >> /209 (1)
          parsedNumCandidates = 209/ << 209 ~ 0 >> /209 (1)
          timeout = 0/ << 0 ~ 0 >> /0 (1)
          numTokens = 1/ << 1 ~ 0 >> /1 (1)
          parseTime = 837/ << 837 ~ 0 >> /837 (1)
          maxCellSize = 144@$CP1:6/ << 144 ~ 0 >> /144@$CP1:6 (1)
          fallOffBeam = 0/ << 0 ~ 0 >> /0 (1)
          totalDerivs = 0/ << 0 ~ 0 >> /0 (1)
          numOfFeaturizedDerivs = 5022/ << 5022 ~ 0 >> /5022 (1)
          numCells = 411/ << 411 ~ 0 >> /411 (1)
        }
      }
      StopWatchSet {
        FeatureExtractor.extractLocal	0.11s (0.0s x 5022)
        Executor.execute	0.379s (0.0s x 3646)
        Parser.parse	0.911s (0.911s x 1)
      }
      Params.write(genovernight.out/calendar/params.0) 
      StopWatchSet {
        FeatureExtractor.extractLocal	0.11s (0.0s x 5022)
        Executor.execute	0.379s (0.0s x 3646)
        Parser.parse	0.911s (0.911s x 1)
      }
      Params.write(genovernight.out/calendar/params.0) 
    }
  }
  Execution directory: genovernight.out/calendar
} [1.1s]
