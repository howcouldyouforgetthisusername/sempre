main() {
  Execution directory: genovernight.out/housing
  Grammar.read {
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate53 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate56 -> $Intermediate55 $VP/NP (SelectFn 1)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate58 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP00 -> $Intermediate72 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP0 -> $Intermediate76 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate77 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate100 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate106 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate127 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate133 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate163 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate166 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate171 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate176 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $Intermediate181 -> that $VP/NP (SelectFn 0)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate220 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate225 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate230 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate235 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $VP/NP; used in rule: $CP1 -> $Intermediate240 $VP/NP (JoinFn forward betaReduce)
    WARNING: Category not defined in the grammar: $Rel0NP; used in rule: $Intermediate246 -> $Rel0NP (JoinFn betaReduce forward (arg0 (lambda r0 (lambda e (call edu.stanford.nlp.sempre.overnight.Simple...(200 total)
    WARNING: Category not defined in the grammar: $Rel0NP; used in rule: $Intermediate251 -> $Rel0NP (JoinFn betaReduce forward (arg0 (lambda r (lambda cp (call edu.stanford.nlp.sempre.overnight.Simple...(209 total)
    WARNING: Category not defined in the grammar: $Rel0NP; used in rule: $Intermediate252 -> $Rel0NP (JoinFn betaReduce forward (arg0 (lambda r (lambda cp (call edu.stanford.nlp.sempre.overnight.Simple...(209 total)
    WARNING: Category not defined in the grammar: $BinaryOp; used in rule: $BinaryOpRight -> $BinaryOp $EntityNP2 (JoinFn betaReduce forward)
    Valid tags: [general, generate, geo440, geo880, parse, regex]
    Used tags: [general, generate]
    386 rules
  }
  Parser: 85 catUnaryRules (sorted), 301 nonCatUnaryRules (in trie)
  Dataset.read {
    Reading overnight/null.examples {
      Example overnight/null.examples:0 (0): [null] => null
    }
  }
  Learner.learn() {
    Iteration 0/0 {
      Processing iter=0.train: 1 examples {
        Examples {
          iter=0.train: example 0/1: overnight/null.examples:0 {
            Example: null {
              Tokens: [null]
              Lemmatized tokens: [null]
              POS tags: [UNK]
              NER tags: [UNK]
              NER values: [UNK]
              Dependency children: []
            }
            Parser.parse: parse {
              WARNING: Currently CatSizeBound is usable only when useSizeInsteadOfDepth = true.
              FloatingParser.infer() {
                SimpleWorld.createWorld: domain = housing (573 entity/property pairs) 
                Parser.ensureExecuted 
              }
            }
            Parser.setEvaluation: 231 candidates {
              Pred@0000: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))) (value (list (name en.housing.condo))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of 123 sesame street and that is housing type of 123 sesame street")) [score=14.265, prob=0.194]
              Pred@0001: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))) (value (list (name en.neighborhood.midtown_west))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of 123 sesame street and that is neighborhood of 123 sesame street")) [score=13.218, prob=0.068]
              Pred@0002: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street)))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.27) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.35) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is neighborhood that is neighborhood of 123 sesame street")) [score=12.932, prob=0.051]
              Pred@0003: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that is housing type of 123 sesame street")) [score=12.517, prob=0.034]
              Pred@0004: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit whose neighborhood is midtown west")) [score=12.469, prob=0.032]
              Pred@0005: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))) (value (list (name en.housing.apartment))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit whose housing type is apartment")) [score=12.308, prob=0.027]
              Pred@0006: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street)))) (value (list (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.2) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.33) (name en.housing_unit.37) (name en.housing_unit.47) (name en.housing_unit.49) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.56) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is housing type that is housing type of 123 sesame street")) [score=12.254, prob=0.026]
              Pred@0007: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))) (value (list (name en.neighborhood.midtown_west))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit whose neighborhood is midtown west")) [score=12.114, prob=0.023]
              Pred@0008: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.27) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.35) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and whose neighborhood is midtown west")) [score=11.978, prob=0.020]
              Pred@0009: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that is neighborhood of 123 sesame street")) [score=11.785, prob=0.016]
              Pred@0010: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet))))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit whose size is 800 square feet")) [score=11.715, prob=0.015]
              Pred@0011: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.27) (name en.housing_unit.35) (name en.housing_unit.39))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and whose housing type is apartment")) [score=11.612, prob=0.014]
              Pred@0012: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 800 en.square_feet) (number 1000 en.square_feet)))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose size is at most 800 square feet or 1000 square feet")) [score=11.604, prob=0.014]
              Pred@0013: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.10) (name en.housing_unit.20) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.35) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.42) (name en.housing_unit.51) (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and whose housing type is apartment")) [score=11.585, prob=0.013]
              Pred@0014: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment)))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit whose housing type is apartment")) [score=11.555, prob=0.013]
              Pred@0015: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.27) (name en.housing_unit.35) (name en.housing_unit.39))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and whose neighborhood is midtown west")) [score=11.532, prob=0.013]
              Pred@0016: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.27) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and whose neighborhood is midtown west")) [score=11.516, prob=0.012]
              Pred@0017: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string rent)) (string =) en.housing_unit.123_sesame_street))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that is monthly rent of 123 sesame street")) [score=11.397, prob=0.011]
              Pred@0018: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.39) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and whose neighborhood is midtown west")) [score=11.305, prob=0.010]
              Pred@0019: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string posting_date)))))) (value (list (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.19) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.47) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is larger than posting date of 123 sesame street")) [score=11.282, prob=0.010]
              Pred@0020: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar))))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit whose monthly rent is 1500 dollars")) [score=11.259, prob=0.010]
              Pred@0021: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath))))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit that has a private bath")) [score=11.242, prob=0.009]
              Pred@0022: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 1500 en.dollar) (number 2000 en.dollar)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.16) (name en.housing_unit.18) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.25) (name en.housing_unit.3) (name en.housing_unit.34) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.56) (name en.housing_unit.59) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is larger than 1500 dollars or 2000 dollars")) [score=11.221, prob=0.009]
              Pred@0023: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room))))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit that has a private room")) [score=11.200, prob=0.009]
              Pred@0024: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.20) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.35) (name en.housing_unit.4) (name en.housing_unit.42) (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and whose housing type is apartment")) [score=11.192, prob=0.009]
              Pred@0025: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.27) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.35) (name en.housing_unit.50) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and whose monthly rent is 1500 dollars")) [score=11.174, prob=0.009]
              Pred@0026: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.39) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and whose size is 800 square feet")) [score=11.166, prob=0.009]
              Pred@0027: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string has_private_bath)))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.27) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and that has a private bath")) [score=11.091, prob=0.008]
              Pred@0028: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet))))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit whose size is 800 square feet")) [score=11.045, prob=0.008]
              Pred@0029: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is housing unit whose posting date is jan 2")) [score=10.976, prob=0.007]
              Pred@0030: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.3) (name en.housing_unit.31) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and whose neighborhood is midtown west")) [score=10.847, prob=0.006]
              Pred@0031: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string posting_date)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.18) (name en.housing_unit.2) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.28) (name en.housing_unit.30) (name en.housing_unit.35) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.51) (name en.housing_unit.56) (name en.housing_unit.59) (name en.housing_unit.6))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is smaller than posting date of 123 sesame street")) [score=10.841, prob=0.006]
              Pred@0032: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 800 en.square_feet) (number 1000 en.square_feet)))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose size is smaller than 800 square feet or 1000 square feet")) [score=10.837, prob=0.006]
              Pred@0033: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (name en.housing.flat))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of the most number of housing unit")) [score=10.825, prob=0.006]
              Pred@0034: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath))))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit that has a private bath")) [score=10.811, prob=0.006]
              Pred@0035: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.27) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.35) (name en.housing_unit.50) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and whose neighborhood is midtown west")) [score=10.809, prob=0.006]
              Pred@0036: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and whose posting date is jan 2")) [score=10.783, prob=0.006]
              Pred@0037: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string neighborhood))))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.27) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.35) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is neighborhood of 123 sesame street")) [score=10.773, prob=0.006]
              Pred@0038: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit whose posting date is jan 2")) [score=10.750, prob=0.006]
              Pred@0039: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs))))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit that allows dogs")) [score=10.730, prob=0.006]
              Pred@0040: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_bath)))) (value (list (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.42))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and that has a private bath")) [score=10.696, prob=0.005]
              Pred@0041: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 800 en.square_feet))))) (value (list (name en.housing_unit.16) (name en.housing_unit.22) (name en.housing_unit.32) (name en.housing_unit.35) (name en.housing_unit.38) (name en.housing_unit.43) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose size is smaller than 800 square feet")) [score=10.599, prob=0.005]
              Pred@0042: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and whose posting date is jan 2")) [score=10.545, prob=0.005]
              Pred@0043: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.27) (name en.housing_unit.3) (name en.housing_unit.37) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.58) (name en.housing_unit.8) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and whose neighborhood is midtown west")) [score=10.532, prob=0.005]
              Pred@0044: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and whose neighborhood is midtown west")) [score=10.524, prob=0.005]
              Pred@0045: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.20) (name en.housing_unit.26) (name en.housing_unit.39) (name en.housing_unit.4))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and whose housing type is apartment")) [score=10.506, prob=0.005]
              Pred@0046: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.42))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and whose housing type is apartment")) [score=10.503, prob=0.004]
              Pred@0047: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit whose posting date is jan 2")) [score=10.459, prob=0.004]
              Pred@0048: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.20) (name en.housing_unit.26) (name en.housing_unit.39) (name en.housing_unit.4))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and whose size is 800 square feet")) [score=10.449, prob=0.004]
              Pred@0049: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room))))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit that has a private room")) [score=10.414, prob=0.004]
              Pred@0050: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.29) (name en.housing_unit.34) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and whose size is 800 square feet")) [score=10.386, prob=0.004]
              Pred@0051: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.20) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.35) (name en.housing_unit.4) (name en.housing_unit.42) (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and whose monthly rent is 1500 dollars")) [score=10.381, prob=0.004]
              Pred@0052: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 800 en.square_feet) (number 1000 en.square_feet)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose size is at least 800 square feet or 1000 square feet")) [score=10.377, prob=0.004]
              Pred@0053: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and whose posting date is jan 2")) [score=10.365, prob=0.004]
              Pred@0054: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and whose posting date is jan 2")) [score=10.351, prob=0.004]
              Pred@0055: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.55) (name en.housing_unit.58) (name en.housing_unit.59))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and whose size is 800 square feet")) [score=10.337, prob=0.004]
              Pred@0056: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.10) (name en.housing_unit.23) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.4) (name en.housing_unit.42))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and whose housing type is apartment")) [score=10.328, prob=0.004]
              Pred@0057: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string housing_type) (string =) en.housing.apartment))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and whose housing type is apartment")) [score=10.324, prob=0.004]
              Pred@0058: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string has_private_bath)))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.34) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and that has a private bath")) [score=10.313, prob=0.004]
              Pred@0059: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.34) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.55) (name en.housing_unit.59))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and whose size is 800 square feet")) [score=10.299, prob=0.004]
              Pred@0060: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.20) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.33) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.55) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and whose size is 800 square feet")) [score=10.279, prob=0.004]
              Pred@0061: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_bath)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.34) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.55) (name en.housing_unit.59))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and that has a private bath")) [score=10.271, prob=0.004]
              Pred@0062: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and whose posting date is jan 2")) [score=10.232, prob=0.003]
              Pred@0063: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is housing unit whose posting date is jan 2")) [score=10.231, prob=0.003]
              Pred@0064: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))) (value (list (name en.housing.condo) (name en.housing.flat))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of 123 sesame street or 900 mission ave")) [score=10.231, prob=0.003]
              Pred@0065: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string allows_dogs)))) (value (list (name en.housing_unit.27) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.35) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.58) (name en.housing_unit.8) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and that allows dogs")) [score=10.219, prob=0.003]
              Pred@0066: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string has_private_room)))) (value (list (name en.housing_unit.10) (name en.housing_unit.20) (name en.housing_unit.24) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and that has a private room")) [score=10.199, prob=0.003]
              Pred@0067: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.10) (name en.housing_unit.20) (name en.housing_unit.24) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and whose housing type is apartment")) [score=10.195, prob=0.003]
              Pred@0068: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 1500 en.dollar) (number 2000 en.dollar)))))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.19) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.44) (name en.housing_unit.48) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is at most 1500 dollars or 2000 dollars")) [score=10.186, prob=0.003]
              Pred@0069: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.13) (name en.housing_unit.19) (name en.housing_unit.33) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and whose size is 800 square feet")) [score=10.051, prob=0.003]
              Pred@0070: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_bath)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.17) (name en.housing_unit.22) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.4) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.6) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and that has a private bath")) [score=10.048, prob=0.003]
              Pred@0071: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string has_private_room)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.3) (name en.housing_unit.31) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and that has a private room")) [score=10.046, prob=0.003]
              Pred@0072: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats))))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit that allows cats")) [score=9.972, prob=0.003]
              Pred@0073: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string posting_date)) (string =) en.housing_unit.123_sesame_street))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that is posting date of 123 sesame street")) [score=9.970, prob=0.003]
              Pred@0074: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and whose posting date is jan 2")) [score=9.964, prob=0.003]
              Pred@0075: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 800 en.square_feet) (number 1000 en.square_feet)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.17) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.37) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.44) (name en.housing_unit.47) (name en.housing_unit.51) (name en.housing_unit.53) (name en.housing_unit.56) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose size is larger than 800 square feet or 1000 square feet")) [score=9.948, prob=0.003]
              Pred@0076: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string rent)))))) (value (list (name en.housing_unit.11) (name en.housing_unit.15) (name en.housing_unit.19) (name en.housing_unit.23))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is smaller than monthly rent of 123 sesame street")) [score=9.947, prob=0.003]
              Pred@0077: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 1500 en.dollar) (number 2000 en.dollar)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is at least 1500 dollars or 2000 dollars")) [score=9.888, prob=0.002]
              Pred@0078: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar))))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit whose monthly rent is 1500 dollars")) [score=9.887, prob=0.002]
              Pred@0079: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 2 3)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is smaller than jan 2 or feb 3")) [score=9.825, prob=0.002]
              Pred@0080: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and whose posting date is jan 2")) [score=9.812, prob=0.002]
              Pred@0081: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string has_private_room)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.29) (name en.housing_unit.31) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.7))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and that has a private room")) [score=9.789, prob=0.002]
              Pred@0082: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string rent)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.16) (name en.housing_unit.18) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.25) (name en.housing_unit.3) (name en.housing_unit.34) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.56) (name en.housing_unit.59) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is larger than monthly rent of 123 sesame street")) [score=9.752, prob=0.002]
              Pred@0083: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 1500 en.dollar) (number 2000 en.dollar)))))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.19) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.44) (name en.housing_unit.48) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is smaller than 1500 dollars or 2000 dollars")) [score=9.722, prob=0.002]
              Pred@0084: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.17) (name en.housing_unit.22) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.4) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.6) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and whose monthly rent is 1500 dollars")) [score=9.703, prob=0.002]
              Pred@0085: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string posting_date)))))) (value (list (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.19) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.47) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is at least posting date of 123 sesame street")) [score=9.671, prob=0.002]
              Pred@0086: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 1500 en.dollar) (number 2000 en.dollar))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars or 2000 dollars")) [score=9.651, prob=0.002]
              Pred@0087: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string allows_cats)))) (value (list (name en.housing_unit.27) (name en.housing_unit.3) (name en.housing_unit.37) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.58) (name en.housing_unit.8) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west and that allows cats")) [score=9.639, prob=0.002]
              Pred@0088: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string posting_date)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.123_sesame_street) (name en.housing_unit.18) (name en.housing_unit.2) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.30) (name en.housing_unit.35) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.51) (name en.housing_unit.56) (name en.housing_unit.59) (name en.housing_unit.6))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is at most posting date of 123 sesame street")) [score=9.638, prob=0.002]
              Pred@0089: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string size)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose size is at least size of 123 sesame street")) [score=9.616, prob=0.002]
              Pred@0090: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string has_private_bath)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.17) (name en.housing_unit.2) (name en.housing_unit.22) (name en.housing_unit.34) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.54))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and that has a private bath")) [score=9.553, prob=0.002]
              Pred@0091: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and whose posting date is jan 2")) [score=9.545, prob=0.002]
              Pred@0092: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of more than two housing unit")) [score=9.521, prob=0.002]
              Pred@0093: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats))))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of housing unit that allows cats")) [score=9.518, prob=0.002]
              Pred@0094: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string rent)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is at least monthly rent of 123 sesame street")) [score=9.512, prob=0.002]
              Pred@0095: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.27) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.35) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.58) (name en.housing_unit.8) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and whose neighborhood is midtown west")) [score=9.508, prob=0.002]
              Pred@0096: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_bath)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that has a private bath")) [score=9.508, prob=0.002]
              Pred@0097: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.10) (name en.housing_unit.20) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.35) (name en.housing_unit.4) (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and whose housing type is apartment")) [score=9.495, prob=0.002]
              Pred@0098: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is housing unit whose posting date is jan 2")) [score=9.483, prob=0.002]
              Pred@0099: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string rent)))))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.17) (name en.housing_unit.19) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is at most monthly rent of 123 sesame street")) [score=9.474, prob=0.002]
              Pred@0100: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is housing unit whose posting date is jan 2")) [score=9.451, prob=0.002]
              Pred@0101: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.20) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.33) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.55) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and whose monthly rent is 1500 dollars")) [score=9.426, prob=0.002]
              Pred@0102: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string has_private_room)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that has a private room")) [score=9.406, prob=0.002]
              Pred@0103: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string size) (string =) (number 800 en.square_feet)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and whose size is 800 square feet")) [score=9.305, prob=0.001]
              Pred@0104: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs))))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of housing unit that allows dogs")) [score=9.290, prob=0.001]
              Pred@0105: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing type that is housing type of at most two housing unit")) [score=9.267, prob=0.001]
              Pred@0106: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.13) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.33) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.58) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and whose monthly rent is 1500 dollars")) [score=9.253, prob=0.001]
              Pred@0107: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 2 3)))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is at least jan 2 or feb 3")) [score=9.250, prob=0.001]
              Pred@0108: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string rent) (string =) (number 1500 en.dollar)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and whose monthly rent is 1500 dollars")) [score=9.223, prob=0.001]
              Pred@0109: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (name en.housing.apartment) (name en.housing.condo) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of at least two housing unit")) [score=9.213, prob=0.001]
              Pred@0110: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave)))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of 123 sesame street or 900 mission ave")) [score=9.211, prob=0.001]
              Pred@0111: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_dogs)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that allows dogs")) [score=9.206, prob=0.001]
              Pred@0112: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and whose monthly rent is 1500 dollars")) [score=9.202, prob=0.001]
              Pred@0113: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string housing_type))))) (value (list (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.2) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.33) (name en.housing_unit.37) (name en.housing_unit.47) (name en.housing_unit.49) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.56) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is housing type of 123 sesame street")) [score=9.199, prob=0.001]
              Pred@0114: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 800 en.square_feet))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.17) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.37) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.44) (name en.housing_unit.47) (name en.housing_unit.51) (name en.housing_unit.53) (name en.housing_unit.56) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose size is larger than 800 square feet")) [score=9.193, prob=0.001]
              Pred@0115: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.29) (name en.housing_unit.31) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.7))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and whose monthly rent is 1500 dollars")) [score=9.190, prob=0.001]
              Pred@0116: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string allows_dogs)))) (value (list (name en.housing_unit.10) (name en.housing_unit.20) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.35) (name en.housing_unit.4) (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and that allows dogs")) [score=9.084, prob=0.001]
              Pred@0117: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 2 3)))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is larger than jan 2 or feb 3")) [score=9.080, prob=0.001]
              Pred@0118: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string has_private_room)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.29) (name en.housing_unit.34) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and that has a private room")) [score=9.074, prob=0.001]
              Pred@0119: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2015 1 2))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is smaller than jan 2")) [score=9.019, prob=0.001]
              Pred@0120: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string has_private_room)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.17) (name en.housing_unit.2) (name en.housing_unit.22) (name en.housing_unit.34) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.54))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and that has a private room")) [score=8.994, prob=9.94e-04]
              Pred@0121: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.neighborhood.midtown_west en.neighborhood.chelsea)))) (value (list (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.19) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.27) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west or chelsea")) [score=8.977, prob=9.77e-04]
              Pred@0122: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string allows_cats)))) (value (list (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and that allows cats")) [score=8.975, prob=9.75e-04]
              Pred@0123: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment) (string allows_cats)))) (value (list (name en.housing_unit.10) (name en.housing_unit.23) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.4) (name en.housing_unit.42))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment and that allows cats")) [score=8.949, prob=9.50e-04]
              Pred@0124: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 800 en.square_feet))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose size is at least 800 square feet")) [score=8.898, prob=9.03e-04]
              Pred@0125: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string has_private_room)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.17) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.31) (name en.housing_unit.34) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.54) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and that has a private room")) [score=8.851, prob=8.62e-04]
              Pred@0126: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing type that is housing type of less than two housing unit")) [score=8.830, prob=8.44e-04]
              Pred@0127: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (string allows_cats)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that allows cats")) [score=8.817, prob=8.33e-04]
              Pred@0128: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string has_private_room)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.13) (name en.housing_unit.3) (name en.housing_unit.37) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.54) (name en.housing_unit.58) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and that has a private room")) [score=8.763, prob=7.89e-04]
              Pred@0129: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string size)))))) (value (list (name en.housing_unit.16) (name en.housing_unit.22) (name en.housing_unit.32) (name en.housing_unit.35) (name en.housing_unit.38) (name en.housing_unit.43) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose size is smaller than size of 123 sesame street")) [score=8.756, prob=7.84e-04]
              Pred@0130: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string posting_date))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.26) (name en.housing_unit.27))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is posting date of 123 sesame street")) [score=8.755, prob=7.82e-04]
              Pred@0131: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string has_private_bath)))) (value (list (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and that has a private bath")) [score=8.724, prob=7.59e-04]
              Pred@0132: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of more than two housing unit")) [score=8.693, prob=7.36e-04]
              Pred@0133: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string size)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.17) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.37) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.44) (name en.housing_unit.47) (name en.housing_unit.51) (name en.housing_unit.53) (name en.housing_unit.56) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose size is larger than size of 123 sesame street")) [score=8.683, prob=7.28e-04]
              Pred@0134: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string has_private_room)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.31) (name en.housing_unit.34) (name en.housing_unit.4) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and that has a private room")) [score=8.680, prob=7.26e-04]
              Pred@0135: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string rent))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is monthly rent of 123 sesame street")) [score=8.666, prob=7.16e-04]
              Pred@0136: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose size is housing unit whose posting date is jan 2")) [score=8.662, prob=7.13e-04]
              Pred@0137: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string size)))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose size is at most size of 123 sesame street")) [score=8.656, prob=7.09e-04]
              Pred@0138: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string has_private_bath)))) (value (list (name en.housing_unit.17) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.34) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.54) (name en.housing_unit.6) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and that has a private bath")) [score=8.650, prob=7.05e-04]
              Pred@0139: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.26) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.52) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and whose size is 800 square feet")) [score=8.629, prob=6.90e-04]
              Pred@0140: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string allows_dogs)))) (value (list (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.26) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.52) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and that allows dogs")) [score=8.569, prob=6.50e-04]
              Pred@0141: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of at least two housing unit")) [score=8.544, prob=6.33e-04]
              Pred@0142: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 2 3)))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is at most jan 2 or feb 3")) [score=8.538, prob=6.30e-04]
              Pred@0143: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string !=) en.housing_unit.123_sesame_street))) (value (list (name en.housing.apartment) (name en.housing.flat) (name en.housing.house))) (type fb:type.any) (canonicalUtterance "housing type that is not housing type of 123 sesame street")) [score=8.535, prob=6.28e-04]
              Pred@0144: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string allows_cats)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.13) (name en.housing_unit.3) (name en.housing_unit.37) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.54) (name en.housing_unit.58) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and that allows cats")) [score=8.506, prob=6.10e-04]
              Pred@0145: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 800 en.square_feet) (number 1000 en.square_feet))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.55) (name en.housing_unit.58) (name en.housing_unit.59))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet or 1000 square feet")) [score=8.466, prob=5.86e-04]
              Pred@0146: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string size)) (string =) en.housing_unit.123_sesame_street))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 and that is size of 123 sesame street")) [score=8.389, prob=5.43e-04]
              Pred@0147: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)) (string allows_cats)))) (value (list (name en.housing_unit.13) (name en.housing_unit.19) (name en.housing_unit.33) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.58))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet and that allows cats")) [score=8.373, prob=5.34e-04]
              Pred@0148: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_cats)))) (value (list (name en.housing_unit.13) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.33) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.58) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and that allows cats")) [score=8.345, prob=5.19e-04]
              Pred@0149: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string allows_cats)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.13) (name en.housing_unit.19) (name en.housing_unit.23) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.3) (name en.housing_unit.33) (name en.housing_unit.37) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.58) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and that allows cats")) [score=8.340, prob=5.17e-04]
              Pred@0150: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.housing.apartment en.housing.condo)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.42) (name en.housing_unit.47) (name en.housing_unit.49) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment or condo")) [score=8.322, prob=5.07e-04]
              Pred@0151: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) en.housing_unit.123_sesame_street))) (value (list (name en.housing.condo))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of 123 sesame street")) [score=8.315, prob=5.04e-04]
              Pred@0152: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of at most two housing unit")) [score=8.244, prob=4.70e-04]
              Pred@0153: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string !=) en.housing_unit.123_sesame_street))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.tribeca))) (type fb:type.any) (canonicalUtterance "neighborhood that is not neighborhood of 123 sesame street")) [score=8.234, prob=4.65e-04]
              Pred@0154: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of two housing unit")) [score=8.192, prob=4.46e-04]
              Pred@0155: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)) (string allows_dogs)))) (value (list (name en.housing_unit.17) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.34) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.54) (name en.housing_unit.6) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath and that allows dogs")) [score=8.176, prob=4.39e-04]
              Pred@0156: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of less than two housing unit")) [score=8.171, prob=4.36e-04]
              Pred@0157: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (name en.neighborhood.midtown_west))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of the least number of housing unit")) [score=8.157, prob=4.30e-04]
              Pred@0158: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 800 en.square_feet))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose size is at most 800 square feet")) [score=8.147, prob=4.26e-04]
              Pred@0159: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)) (string allows_dogs)))) (value (list (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.4) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars and that allows dogs")) [score=8.140, prob=4.23e-04]
              Pred@0160: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (name en.housing.apartment))) (type fb:type.any) (canonicalUtterance "housing type that is housing type of the least number of housing unit")) [score=8.057, prob=3.89e-04]
              Pred@0161: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.4) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and whose monthly rent is 1500 dollars")) [score=7.959, prob=3.53e-04]
              Pred@0162: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 2 3))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2 or feb 3")) [score=7.833, prob=3.11e-04]
              Pred@0163: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string allows_dogs)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.38) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and that allows dogs")) [score=7.789, prob=2.98e-04]
              Pred@0164: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and whose posting date is jan 2")) [score=7.680, prob=2.67e-04]
              Pred@0165: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)) (string allows_dogs)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.31) (name en.housing_unit.34) (name en.housing_unit.4) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room and that allows dogs")) [score=7.644, prob=2.58e-04]
              Pred@0166: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string <) (number 2)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has less than two housing type")) [score=7.592, prob=2.45e-04]
              Pred@0167: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) en.housing_unit.123_sesame_street))) (value (list (name en.neighborhood.midtown_west))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of 123 sesame street")) [score=7.585, prob=2.43e-04]
              Pred@0168: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)) (string allows_cats)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.33) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.54) (name en.housing_unit.58) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs and that allows cats")) [score=7.578, prob=2.41e-04]
              Pred@0169: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is larger than jan 2")) [score=7.569, prob=2.39e-04]
              Pred@0170: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2015 1 2))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is at least jan 2")) [score=7.483, prob=2.19e-04]
              Pred@0171: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string <=) (number 2)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has at most two housing type")) [score=7.454, prob=2.13e-04]
              Pred@0172: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) en.housing.apartment))) (value (list (name en.housing_unit.10) (name en.housing_unit.20) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.35) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.42) (name en.housing_unit.51) (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is apartment")) [score=7.282, prob=1.79e-04]
              Pred@0173: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.38) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.45) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is not midtown west")) [score=7.228, prob=1.70e-04]
              Pred@0174: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)) (string allows_dogs)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.33) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.54) (name en.housing_unit.58) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats and that allows dogs")) [score=7.216, prob=1.68e-04]
              Pred@0175: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.27) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.35) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.50) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9))) (type fb:type.any) (canonicalUtterance "housing unit whose neighborhood is midtown west")) [score=7.084, prob=1.47e-04]
              Pred@0176: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2015 1 2))))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is at most jan 2")) [score=7.059, prob=1.44e-04]
              Pred@0177: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 1500 en.dollar))))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is at least 1500 dollars")) [score=7.028, prob=1.39e-04]
              Pred@0178: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string <=) (number 2)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has at most two neighborhood")) [score=7.021, prob=1.38e-04]
              Pred@0179: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string !=) (number 1500 en.dollar)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.23) (name en.housing_unit.25) (name en.housing_unit.3) (name en.housing_unit.34) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.56) (name en.housing_unit.59) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is not 1500 dollars")) [score=6.858, prob=1.17e-04]
              Pred@0180: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date))))) (value (list (name en.housing_unit.30) (name en.housing_unit.35) (name en.housing_unit.39) (name en.housing_unit.48) (name en.housing_unit.56))) (type fb:type.any) (canonicalUtterance "housing unit that has the smallest posting date")) [score=6.735, prob=1.04e-04]
              Pred@0181: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 1500 en.dollar))))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.16) (name en.housing_unit.18) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.25) (name en.housing_unit.3) (name en.housing_unit.34) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.56) (name en.housing_unit.59) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is larger than 1500 dollars")) [score=6.710, prob=1.01e-04]
              Pred@0182: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 1500 en.dollar))))) (value (list (name en.housing_unit.11) (name en.housing_unit.15) (name en.housing_unit.19) (name en.housing_unit.23))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is smaller than 1500 dollars")) [score=6.690, prob=9.93e-05]
              Pred@0183: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string <) (number 2)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has less than two neighborhood")) [score=6.675, prob=9.78e-05]
              Pred@0184: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string posting_date))))) (value (list (name en.housing_unit.22) (name en.housing_unit.42) (name en.housing_unit.47) (name en.housing_unit.53) (name en.housing_unit.55) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has the largest posting date")) [score=6.528, prob=8.44e-05]
              Pred@0185: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string housing_type)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list)) (type fb:type.any) (canonicalUtterance "housing type that is housing type of two housing unit")) [score=6.461, prob=7.89e-05]
              Pred@0186: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string max) (string housing_type)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has the most number of housing type")) [score=6.302, prob=6.73e-05]
              Pred@0187: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string max) (string neighborhood)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has the most number of neighborhood")) [score=6.298, prob=6.71e-05]
              Pred@0188: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string size))))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.55) (name en.housing_unit.58) (name en.housing_unit.59))) (type fb:type.any) (canonicalUtterance "housing unit whose size is size of 123 sesame street")) [score=6.268, prob=6.51e-05]
              Pred@0189: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string !=) (number 800 en.square_feet)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.35) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.47) (name en.housing_unit.51) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose size is not 800 square feet")) [score=6.266, prob=6.50e-05]
              Pred@0190: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string >=) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that has at least two neighborhood")) [score=6.226, prob=6.24e-05]
              Pred@0191: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string >=) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that has at least two housing type")) [score=6.154, prob=5.81e-05]
              Pred@0192: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string >) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that has more than two housing type")) [score=6.133, prob=5.68e-05]
              Pred@0193: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string !=) en.housing.apartment))) (value (list (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose housing type is not apartment")) [score=6.069, prob=5.33e-05]
              Pred@0194: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent))))) (value (list (name en.housing_unit.10))) (type fb:type.any) (canonicalUtterance "housing unit that has the largest monthly rent")) [score=6.068, prob=5.33e-05]
              Pred@0195: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size))))) (value (list (name en.housing_unit.51))) (type fb:type.any) (canonicalUtterance "housing unit that has the largest size")) [score=5.982, prob=4.89e-05]
              Pred@0196: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (name en.neighborhood.chelsea))) (type fb:type.any) (canonicalUtterance "neighborhood that is neighborhood of the most number of housing unit")) [score=5.880, prob=4.41e-05]
              Pred@0197: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string !=) (date 2015 1 2)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is not jan 2")) [score=5.822, prob=4.17e-05]
              Pred@0198: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string size))))) (value (list (name en.housing_unit.57))) (type fb:type.any) (canonicalUtterance "housing unit that has the smallest size")) [score=5.785, prob=4.02e-05]
              Pred@0199: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string >) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that has more than two neighborhood")) [score=5.724, prob=3.78e-05]
              Pred@0200: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_bath)))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.2) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.34) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit that has a private bath")) [score=5.720, prob=3.76e-05]
              Pred@0201: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size) (string =) (number 800 en.square_feet)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.26) (name en.housing_unit.29) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.36) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.52) (name en.housing_unit.55) (name en.housing_unit.58) (name en.housing_unit.59))) (type fb:type.any) (canonicalUtterance "housing unit whose size is 800 square feet")) [score=5.690, prob=3.65e-05]
              Pred@0202: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent))))) (value (list (name en.housing_unit.11))) (type fb:type.any) (canonicalUtterance "housing unit that has the smallest monthly rent")) [score=5.614, prob=3.38e-05]
              Pred@0203: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string min) (string housing_type)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has the least number of housing type")) [score=5.476, prob=2.95e-05]
              Pred@0204: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string min) (string neighborhood)))) (value (list (name en.housing_unit.10) (name en.housing_unit.11) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.16) (name en.housing_unit.17) (name en.housing_unit.18) (name en.housing_unit.19) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.37) (name en.housing_unit.38) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.49) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.51) (name en.housing_unit.52) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.59) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has the least number of neighborhood")) [score=5.474, prob=2.94e-05]
              Pred@0205: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string sum) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent))))) (value (list (number 69586 en.dollar))) (type fb:type.any) (canonicalUtterance "total monthly rent of housing unit")) [score=5.343, prob=2.58e-05]
              Pred@0206: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string rent)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 1500 en.dollar))))) (value (list (name en.housing_unit.11) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.15) (name en.housing_unit.17) (name en.housing_unit.19) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.23) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is at most 1500 dollars")) [score=5.289, prob=2.44e-05]
              Pred@0207: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string neighborhood)))) (value (list (name en.neighborhood.midtown_west))) (type fb:type.any) (canonicalUtterance "neighborhood of 123 sesame street")) [score=5.191, prob=2.22e-05]
              Pred@0208: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string posting_date) (string =) (date 2015 1 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit whose posting date is jan 2")) [score=5.190, prob=2.22e-05]
              Pred@0209: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 800 en.square_feet) (number 1000 en.square_feet)))) (value (list (number 1000 en.square_feet) (number 800 en.square_feet))) (type fb:type.any) (canonicalUtterance "800 square feet or 1000 square feet")) [score=5.142, prob=2.11e-05]
              Pred@0210: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent) (string =) (number 1500 en.dollar)))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.14) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.29) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.32) (name en.housing_unit.33) (name en.housing_unit.35) (name en.housing_unit.36) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.42) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.54) (name en.housing_unit.55) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.7) (name en.housing_unit.8))) (type fb:type.any) (canonicalUtterance "housing unit whose monthly rent is 1500 dollars")) [score=5.031, prob=1.89e-05]
              Pred@0211: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string posting_date)))) (value (list (date 2004 -1 -1))) (type fb:type.any) (canonicalUtterance "posting date of 123 sesame street")) [score=4.837, prob=1.56e-05]
              Pred@0212: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string neighborhood) (string =) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that has two neighborhood")) [score=4.825, prob=1.54e-05]
              Pred@0213: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string has_private_room)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.123_sesame_street) (name en.housing_unit.13) (name en.housing_unit.17) (name en.housing_unit.2) (name en.housing_unit.20) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.29) (name en.housing_unit.3) (name en.housing_unit.31) (name en.housing_unit.34) (name en.housing_unit.37) (name en.housing_unit.39) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.47) (name en.housing_unit.48) (name en.housing_unit.54) (name en.housing_unit.56) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.7) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that has a private room")) [score=4.819, prob=1.53e-05]
              Pred@0214: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string housing_type) (string =) (number 2)))) (value (list)) (type fb:type.any) (canonicalUtterance "housing unit that has two housing type")) [score=4.777, prob=1.47e-05]
              Pred@0215: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing) (string !type))))) (value (list (number 4 count))) (type fb:type.any) (canonicalUtterance "number of housing type")) [score=4.698, prob=1.35e-05]
              Pred@0216: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_cats)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.13) (name en.housing_unit.19) (name en.housing_unit.23) (name en.housing_unit.25) (name en.housing_unit.27) (name en.housing_unit.28) (name en.housing_unit.3) (name en.housing_unit.33) (name en.housing_unit.37) (name en.housing_unit.4) (name en.housing_unit.40) (name en.housing_unit.41) (name en.housing_unit.42) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.5) (name en.housing_unit.50) (name en.housing_unit.53) (name en.housing_unit.54) (name en.housing_unit.58) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that allows cats")) [score=4.435, prob=1.04e-05]
              Pred@0217: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave))) (value (list (name en.housing_unit.123_sesame_street) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "123 sesame street or 900 mission ave")) [score=4.404, prob=1.01e-05]
              Pred@0218: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.neighborhood.midtown_west en.neighborhood.chelsea))) (value (list (name en.neighborhood.chelsea) (name en.neighborhood.midtown_west))) (type fb:type.any) (canonicalUtterance "midtown west or chelsea")) [score=4.369, prob=9.74e-06]
              Pred@0219: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string housing_type)))) (value (list (name en.housing.condo))) (type fb:type.any) (canonicalUtterance "housing type of 123 sesame street")) [score=4.236, prob=8.53e-06]
              Pred@0220: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string allows_dogs)))) (value (list (name en.housing_unit.10) (name en.housing_unit.12) (name en.housing_unit.17) (name en.housing_unit.20) (name en.housing_unit.21) (name en.housing_unit.22) (name en.housing_unit.24) (name en.housing_unit.25) (name en.housing_unit.26) (name en.housing_unit.27) (name en.housing_unit.30) (name en.housing_unit.31) (name en.housing_unit.33) (name en.housing_unit.34) (name en.housing_unit.35) (name en.housing_unit.38) (name en.housing_unit.4) (name en.housing_unit.41) (name en.housing_unit.43) (name en.housing_unit.44) (name en.housing_unit.45) (name en.housing_unit.46) (name en.housing_unit.48) (name en.housing_unit.52) (name en.housing_unit.54) (name en.housing_unit.57) (name en.housing_unit.58) (name en.housing_unit.6) (name en.housing_unit.8) (name en.housing_unit.9) (name en.housing_unit.900_mission_ave))) (type fb:type.any) (canonicalUtterance "housing unit that allows dogs")) [score=4.024, prob=6.90e-06]
              Pred@0221: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size))))) (value (list (number 1008.765 en.square_feet))) (type fb:type.any) (canonicalUtterance "average size of housing unit")) [score=4.010, prob=6.81e-06]
              Pred@0222: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string sum) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string size))))) (value (list (number 34298 en.square_feet))) (type fb:type.any) (canonicalUtterance "total size of housing unit")) [score=3.954, prob=6.44e-06]
              Pred@0223: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string rent)))) (value (list (number 1500 en.dollar))) (type fb:type.any) (canonicalUtterance "monthly rent of 123 sesame street")) [score=3.671, prob=4.85e-06]
              Pred@0224: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2015 1 2) (date 2015 2 3)))) (value (list (date 2015 1 2) (date 2015 2 3))) (type fb:type.any) (canonicalUtterance "jan 2 or feb 3")) [score=3.532, prob=4.22e-06]
              Pred@0225: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type))))) (value (list (number 3 count))) (type fb:type.any) (canonicalUtterance "number of neighborhood")) [score=3.523, prob=4.18e-06]
              Pred@0226: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type)) (string rent))))) (value (list (number 2174.563 en.dollar))) (type fb:type.any) (canonicalUtterance "average monthly rent of housing unit")) [score=3.468, prob=3.96e-06]
              Pred@0227: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.housing.apartment en.housing.condo))) (value (list (name en.housing.apartment) (name en.housing.condo))) (type fb:type.any) (canonicalUtterance "apartment or condo")) [score=3.365, prob=3.57e-06]
              Pred@0228: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 1500 en.dollar) (number 2000 en.dollar)))) (value (list (number 1500 en.dollar) (number 2000 en.dollar))) (type fb:type.any) (canonicalUtterance "1500 dollars or 2000 dollars")) [score=3.361, prob=3.56e-06]
              Pred@0229: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.housing_unit.123_sesame_street (string size)))) (value (list (number 800 en.square_feet))) (type fb:type.any) (canonicalUtterance "size of 123 sesame street")) [score=3.007, prob=2.50e-06]
              Pred@0230: (derivation (formula (call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.housing_unit) (string !type))))) (value (list (number 60 count))) (type fb:type.any) (canonicalUtterance "number of housing unit")) [score=2.829, prob=2.09e-06]
            }
            Current: correct=0 oracle=0 partCorrect=0 partOracle=0 parsed=1 numCandidates=231 parsedNumCandidates=231 timeout=0 numTokens=1 parseTime=779 maxCellSize=124 fallOffBeam=0 totalDerivs=0 numOfFeaturizedDerivs=4419 numCells=443
            Cumulative(iter=0.train): correct=0 oracle=0 partCorrect=0 partOracle=0 parsed=1 numCandidates=231 parsedNumCandidates=231 timeout=0 numTokens=1 parseTime=779 maxCellSize=124 fallOffBeam=0 totalDerivs=0 numOfFeaturizedDerivs=4419 numCells=443
          }
        }
        Stats for iter=0.train: correct=0 oracle=0 partCorrect=0 partOracle=0 parsed=1 numCandidates=231 parsedNumCandidates=231 timeout=0 numTokens=1 parseTime=779 maxCellSize=124 fallOffBeam=0 totalDerivs=0 numOfFeaturizedDerivs=4419 numCells=443
        Evaluation stats for iter=0.train {
          correct = 0/ << 0 ~ 0 >> /0 (1)
          oracle = 0/ << 0 ~ 0 >> /0 (1)
          partCorrect = 0/ << 0 ~ 0 >> /0 (1)
          partOracle = 0/ << 0 ~ 0 >> /0 (1)
          parsed = 1/ << 1 ~ 0 >> /1 (1)
          numCandidates = 231/ << 231 ~ 0 >> /231 (1)
          parsedNumCandidates = 231/ << 231 ~ 0 >> /231 (1)
          timeout = 0/ << 0 ~ 0 >> /0 (1)
          numTokens = 1/ << 1 ~ 0 >> /1 (1)
          parseTime = 779/ << 779 ~ 0 >> /779 (1)
          maxCellSize = 124@$CP1:6/ << 124 ~ 0 >> /124@$CP1:6 (1)
          fallOffBeam = 0/ << 0 ~ 0 >> /0 (1)
          totalDerivs = 0/ << 0 ~ 0 >> /0 (1)
          numOfFeaturizedDerivs = 4419/ << 4419 ~ 0 >> /4419 (1)
          numCells = 443/ << 443 ~ 0 >> /443 (1)
        }
      }
      StopWatchSet {
        FeatureExtractor.extractLocal	0.111s (0.0s x 4419)
        Executor.execute	0.372s (0.0s x 3252)
        Parser.parse	0.857s (0.857s x 1)
      }
      Params.write(genovernight.out/housing/params.0) 
      StopWatchSet {
        FeatureExtractor.extractLocal	0.111s (0.0s x 4419)
        Executor.execute	0.372s (0.0s x 3252)
        Parser.parse	0.857s (0.857s x 1)
      }
      Params.write(genovernight.out/housing/params.0) 
    }
  }
  Execution directory: genovernight.out/housing
} [1.1s]
