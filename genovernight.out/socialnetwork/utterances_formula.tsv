person that student whose end date is at most 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
city that is birthplace of student whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that is friends with student whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose start date is larger than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of student whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
student whose end date is at most end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with employee whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose end date is at most start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
relationship status that is relationship status of employee whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that is friends with student whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose height is 180 cm and whose field of study is computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string field_of_study) (string =) en.field.computer_science))
city that is birthplace of employee whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose start date is larger than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose start date is at least end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose end date is at most start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose start date is larger than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that employee whose start date is smaller than 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose end date is at least end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
job title that is job title of person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string job_title)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
employee whose end date is at most end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose end date is at least end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that student whose start date is larger than 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose end date is at least end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose end date is smaller than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of student whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that is friends with employee whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose end date is smaller than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose end date is at most end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose end date is smaller than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose end date is at least end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
relationship status that is relationship status of employee whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose end date is at least start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose start date is at most end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose start date is at least start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose start date is at least end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that employee whose start date is at least 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose start date is at least end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose start date is smaller than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose start date is larger than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of student whose university is not brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
student whose start date is at least start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
relationship status that is relationship status of employee whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose start date is at most start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of student whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
student whose start date is at most end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that employee whose end date is larger than 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose start date is at most end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that person whose height is 180 cm is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
person that is friends with employee whose job title is not software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that employee whose end date is at least 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose end date is smaller than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose start date is larger than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
relationship status that is relationship status of student whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose end date is at most end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose height is 180 cm and whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string height) (string =) (number 180 en.cm)))
person that student whose end date is larger than 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose end date is at most start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose start date is at most start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose start date is larger than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of student whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that is friends with student whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
student whose start date is smaller than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose end date is smaller than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
relationship status that is relationship status of employee whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
field of study of student alice whose field of study is computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string field_of_study)))
employee whose start date is at most start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of employee whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose end date is at least start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that is friends with employee whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
relationship status that is relationship status of student whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that is friends with student whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
city that is birthplace of student whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
gender that is gender of student whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose height is 180 cm and whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employment_end_date) (string =) (date 2004 -1 -1)))
employee whose end date is smaller than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose end date is at least start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that employee whose job title is not software engineer is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose end date is smaller than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that employee whose start date is larger than 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that is friends with employee whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose start date is larger than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that student whose field of study is not computer science is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that student whose end date is smaller than 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that alice is friends with and whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))
person whose height is 180 cm and that is birthplace of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))
person that is friends with student whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose height is 180 cm and that is height of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string height)) (string =) en.person.alice))
person that student whose start date is at most 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
student whose end date is at least start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with employee whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
city that is birthplace of employee whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose end date is end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose start date is at most end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
relationship status that is relationship status of employee whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that is friends with student whose field of study is not computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose end date is larger than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose start date is at least start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose start date is at least end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of employee whose job title is not software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose start date is larger than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose height is 180 cm and whose university is brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string university) (string =) en.university.brown))
employee whose end date is at most start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose end date is larger than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
field that is field of study of person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string field_of_study)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
relationship status that is relationship status of employee whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose birthdate is smaller than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))
relationship status that is relationship status of student whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
relationship status that is relationship status of student whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose end date is larger than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that is friends with person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
person whose birthdate is at least end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))
city that is birthplace of student whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that employee whose end date is at most 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose start date is smaller than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that student whose start date is at least 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
city that is birthplace of student whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that is friends with student whose university is not brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose birthdate is smaller than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))
relationship status that is relationship status of student whose field of study is not computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose relationship status is person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
student whose start date is smaller than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose height is 180 cm and that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string friend) (string =) en.person.alice))
employee whose start date is at least start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose end date is larger than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose birthplace is person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
person that is friends with alice and that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string friend) (string =) en.person.alice))
person that is friends with employee whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose end date is larger than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that student whose start date is smaller than 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
city that is birthplace of employee whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
gender that is gender of employee whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose start date is smaller than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of employee whose employer is not mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
city that is birthplace of employee whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose birthdate is smaller than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))
relationship status that is relationship status of person that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))
city that is birthplace of student whose field of study is not computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose height is 180 cm and whose start date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employment_start_date) (string =) (date 2004 -1 -1)))
student whose end date is larger than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with employee whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose field of study is field of study of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that employee whose end date is smaller than 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose height is 180 cm and that is birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthdate)) (string =) en.person.alice))
student whose start date is at most start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with alice and whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string height) (string =) (number 180 en.cm)))
person that is friends with employee whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
start date of student alice whose field of study is computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_start_date)))
person whose birthdate is at least start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))
person whose height is 180 cm and whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthplace) (string =) en.city.new_york))
city that is birthplace of employee whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
relationship status that is relationship status of employee whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose start date is smaller than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose start date is larger than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose height is person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
person that is friends with employee whose employer is not mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that student whose end date is at least 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that alice is friends with and that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
student whose start date is smaller than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose height is 180 cm and that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
student whose start date is start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose birthplace is city that is birthplace of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice)))
person whose birthdate is larger than end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))
person whose birthdate is at most end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))
person that student whose university is not brown university is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
student whose start date is end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose height is 180 cm and whose job title is software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string job_title) (string =) en.job_title.software_engineer))
person that is friends with alice and that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
person that is friends with student whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that employee whose end date is not 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
city that is birthplace of student whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
relationship status that is relationship status of person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
student whose end date is larger than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose end date is at most birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with student whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that employee whose start date is at most 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
city that is birthplace of employee whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose height is 180 cm and that is gender of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))
field of study of student alice whose university is brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string field_of_study)))
person whose birthdate is at least end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))
person that student whose end date is not 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
gender that is gender of employee whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
relationship status that is relationship status of employee whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose height is at least 180 cm or 200 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))
person that is friends with student whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose height is 180 cm and whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_end_date) (string =) (date 2004 -1 -1)))
person whose birthdate is smaller than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))
student whose end date is smaller than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose end date is at least birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
city that is birthplace of employee whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose height is smaller than 180 cm or 200 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))
job title of employee alice whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string job_title)))
city that is birthplace of employee whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that alice is friends with and that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string friend) (string =) en.person.alice))
person whose height is 180 cm and whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string birthdate) (string =) (date 2004 -1 -1)))
employee whose end date is start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose end date is at most 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
city that is birthplace of student whose university is not brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
student whose start date is start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with student whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
relationship status that is relationship status of student whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
relationship status that is relationship status of student whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose birthdate is at most start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))
person whose birthdate is at least start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))
person whose height is 180 cm and that is relationship status of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))
employee whose start date is at most birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
city that is birthplace of person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
person that person that is friends with alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))
person whose birthdate is at most end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))))
person whose height is smaller than height of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))
gender that is gender of student whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose start date is smaller than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that employee whose employer is not mckinsey is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose birthdate is person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
person that student whose start date is not 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
student whose start date is end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose end date is at most birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose height is 180 cm and whose start date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string education_start_date) (string =) (date 2004 -1 -1)))
student whose end date is at least birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
job title of employee alice whose job title is software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string job_title)))
company that is employer of person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employer)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
student whose start date is larger than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
start date of employee alice whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))
student whose end date is at least 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
city that is birthplace of student whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose start date is larger than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that alice is friends with and that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string logged_in)))
person whose height is 180 cm and whose employer is mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string employer) (string =) en.company.mckinsey))
student whose end date is larger than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose job title is software engineer or program manager	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose start date is at most 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose birthdate is larger than end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))))
employee whose start date is end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose start date is smaller than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
end date of student alice whose field of study is computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string education_end_date)))
city that is birthplace of employee whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that is friends with employee whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose birthdate is start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date))))
city that is birthplace of student whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
city that is birthplace of employee whose job title is not software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
city that is birthplace of student whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
city that is birthplace of alice and that is birthplace of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))
person whose height is 180 cm and that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string logged_in)))
employee whose end date is at least 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that alice is friends with and whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))
person whose birthdate is start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date))))
person whose height is at least height of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))
relationship status that is relationship status of person that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))
person that is friends with employee whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose height is 180 cm and whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string relationship_status) (string =) en.relationship_status.single))
person whose relationship status is single and whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string height) (string =) (number 180 en.cm)))
employee whose start date is start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
city that is birthplace of student whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
job title of employee alice whose employer is mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string job_title)))
person whose birthdate is larger than start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))))
person whose height is 180 cm and whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)) (string gender) (string =) en.gender.male))
gender that is gender of student whose field of study is not computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that is friends with alice and whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string gender) (string =) en.gender.male))
person whose relationship status is single and that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
employee whose start date is start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student that has at most two field of study	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose gender is male and whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string height) (string =) (number 180 en.cm)))
employee whose end date is smaller than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose gender is person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
person that is friends with person that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))
employee whose start date is end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that is friends with person that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))
person that is friends with alice and whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthdate) (string =) (date 2004 -1 -1)))
employee whose start date is at least birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose end date is at most 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose birthdate is 2004 and that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
employee whose end date is end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
end date of employee alice whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))
person whose birthdate is end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date))))
employee whose job title is job title of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose height is at most height of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))
university of student alice whose field of study is computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study) (string =) en.field.computer_science) (string university)))
city that is birthplace of employee whose employer is not mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
job title of employee alice whose start date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string job_title)))
person that is friends with alice and whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))
employee whose end date is larger than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that employee whose start date is not 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
university that is university of person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string university)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
student whose start date is at most birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that alice is friends with and whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string gender) (string =) en.gender.male))
person whose height is larger than height of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))))
employee whose start date is larger than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose end date is smaller than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
gender that is gender of employee whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
start date of student alice whose university is brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_start_date)))
person that is friends with student whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that is friends with person whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))
end date of employee alice whose start date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_end_date)))
city that is birthplace of person that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))
person that is friends with alice and that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string logged_in)))
person whose relationship status is single and that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string friend) (string =) en.person.alice))
person whose birthdate is at most start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))
gender that is gender of student whose university is not brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
relationship status that is relationship status of person whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))
gender that is gender of employee whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose end date is start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with more than two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person that is logged in and whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string height) (string =) (number 180 en.cm)))
student whose end date is smaller than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose birthdate is 2004 and that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string friend) (string =) en.person.alice))
field of study of student alice whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string field_of_study)))
relationship status that is relationship status of person that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))
person that alice is friends with and whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string birthplace) (string =) en.city.new_york))
gender that is gender of employee whose job title is not software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
employee whose start date is at least 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
gender that is gender of employee whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose start date is at least birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that person that is logged in is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))
city that is birthplace of employee whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
gender that is gender of employee whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose start date is smaller than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that person whose birthdate is 2004 is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))
student whose start date is at most 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
end date of employee alice whose job title is software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_end_date)))
employee whose end date is start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
gender that is gender of student whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
gender that is gender of student whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee that has at most two job title	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of alice and that is relationship status of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))
employer of employee alice whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date) (string =) (date 2004 -1 -1)) (string employer)))
person whose birthdate is 2004 and whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string height) (string =) (number 180 en.cm)))
person whose gender is male and that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string friend) (string =) en.person.alice))
person that is logged in and that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string friend) (string =) en.person.alice))
gender that is gender of employee whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
student whose end date is smaller than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
city that is birthplace of student whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that the most number of person is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose birthdate is end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date))))
relationship status that is relationship status of person whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))
student whose end date is end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
end date of student alice whose university is brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string education_end_date)))
person whose birthplace is new york and whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string height) (string =) (number 180 en.cm)))
person that is friends with person whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))
employee whose start date is smaller than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that is logged in and that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
person whose birthdate is at most birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))
student that has at most two university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
relationship status that is relationship status of employee whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that alice is friends with and whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))
person whose birthdate is larger than start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))))
gender that is gender of student whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
gender that is gender of student whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
gender that is gender of student whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person that is friends with person whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))
gender that is gender of the least number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose birthplace is new york and that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
relationship status that is relationship status of person whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))
gender that is gender of employee whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person that is friends with alice and whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice) (string relationship_status) (string =) en.relationship_status.single))
person whose birthplace is new york and that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string friend) (string =) en.person.alice))
person whose height is larger than 180 cm or 200 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))
city that is birthplace of person that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))
relationship status that is relationship status of person whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))
person that at most two person is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
student whose end date is larger than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that person whose birthplace is new york is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))
student whose start date is at least 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that person that alice is friends with is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))
university of student alice whose university is brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university) (string =) en.university.brown) (string university)))
person whose height is at most 180 cm or 200 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))))
city that is birthplace of more than two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
student whose start date is birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
start date of employee alice whose start date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employment_start_date)))
employee whose start date is smaller than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
gender that is gender of alice and that is gender of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))
person that at least two person is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
student whose field of study is computer science or history	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
start date of student alice whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_start_date)))
person whose gender is male and that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
student whose end date is end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose end date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose relationship status is relationship status that is relationship status of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice)))
person that is friends with less than two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person that is friends with person that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))
city that is birthplace of person that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))
person whose birthdate is smaller than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))
student whose end date is start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
city that is birthplace of person whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))
gender that is gender of person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm))))
city that is birthplace of less than two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
employee whose end date is larger than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee that has the most number of job title	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
start date of employee alice whose employer is mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_start_date)))
person whose height is at least 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))
gender that is gender of student whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose birthplace is birthplace of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace))))
person whose birthplace is new york and whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string gender) (string =) en.gender.male))
person whose birthdate is at least birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))
student whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose birthplace is new york and whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string relationship_status) (string =) en.relationship_status.single))
end date of employee alice whose employer is mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employment_end_date)))
employer of employee alice whose job title is software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employer)))
employee whose employer is employer of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose end date is larger than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
gender that is gender of two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
end date of student alice whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string education_end_date)))
gender that is gender of employee whose employer is not mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose relationship status is single and whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string gender) (string =) en.gender.male))
person whose birthdate is 2004 and whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthplace) (string =) en.city.new_york))
gender that is gender of person that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice)))
student that has the most number of field of study	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
gender that is gender of student whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
employee whose end date is birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employer of employee alice whose start date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date) (string =) (date 2004 -1 -1)) (string employer)))
start date of employee alice whose job title is software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title) (string =) en.job_title.software_engineer) (string employment_start_date)))
person whose birthdate is 2004 and that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string logged_in)))
employee whose employer is mckinsey or google	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose relationship status is single and whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthdate) (string =) (date 2004 -1 -1)))
person that person whose gender is male is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))
person that person whose relationship status is single is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))
gender that is gender of employee whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
person whose birthplace is new york or beijing	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.city.new_york en.city.bejing)))
person that is friends with person whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))
relationship status that is relationship status of two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose relationship status is single and whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string relationship_status) (string =) en.relationship_status.single))
person whose birthdate is 2004 and whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string gender) (string =) en.gender.male))
city that is birthplace of at most two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
city that is birthplace of the most number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person that is logged in and whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string birthplace) (string =) en.city.new_york))
gender that is gender of student whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student))))
person whose height is 180 cm or 200 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm))))
person that is logged in and that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string logged_in)))
employee whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose height is smaller than 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))
person whose relationship status is single and whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string birthplace) (string =) en.city.new_york))
person that more than two person is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person that is friends with the most number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string friend) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
student whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose height is larger than 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))
university of student alice whose end date is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date) (string =) (date 2004 -1 -1)) (string university)))
city that is birthplace of person whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))
student whose end date is birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose height is at most 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 180 en.cm))))
person whose birthdate is smaller than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))
relationship status that is relationship status of the most number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose relationship status is single and that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single) (string logged_in)))
student whose university is brown university or ucla	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
city that is birthplace of person whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))
person that is logged in and whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string birthdate) (string =) (date 2004 -1 -1)))
relationship status that is relationship status of the least number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose birthplace is new york and that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string logged_in)))
person that is friends with at most two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose gender is male and whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string birthdate) (string =) (date 2004 -1 -1)))
person whose birthdate is larger than birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))))
person whose gender is male and whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string birthplace) (string =) en.city.new_york))
person that is friends with at least two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose birthdate is larger than 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))
city that is birthplace of two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
student that has less than two field of study	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string field_of_study) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that is logged in and whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string gender) (string =) en.gender.male))
city that is birthplace of person whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))
city that is birthplace of the least number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose birthdate is at least 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))
person that two person is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose gender is gender that is gender of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice)))
person whose birthplace is new york and whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string birthplace) (string =) en.city.new_york))
city that is birthplace of at least two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose birthdate is 2004 and whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string birthdate) (string =) (date 2004 -1 -1)))
student whose start date is 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with the least number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string friend) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose gender is male and whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string relationship_status) (string =) en.relationship_status.single))
person whose gender is male and whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string gender) (string =) en.gender.male))
person whose birthplace is new york and whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york) (string birthdate) (string =) (date 2004 -1 -1)))
employee that has at most two employer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of at most two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
gender that is gender of the most number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person that is logged in and whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)) (string relationship_status) (string =) en.relationship_status.single))
student whose field of study is not computer science	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string field_of_study) (string !=) en.field.computer_science)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that has at most two relationship status	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <=) (number 2)))
person that has at most two birthplace	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string <=) (number 2)))
gender that is gender of employee whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee))))
gender that is gender of person that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice)))
person whose birthdate is 2004 and whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)) (string relationship_status) (string =) en.relationship_status.single))
person whose birthdate is birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate))))
person that has the most number of relationship status	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string relationship_status)))
gender that is gender of person that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in))))
person whose gender is male and that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male) (string logged_in)))
student that has the most number of university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that the least number of person is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
employee that has less than two job title	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string job_title) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employer of employee alice whose employer is mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer) (string =) en.company.mckinsey) (string employer)))
employee that has the smallest end date	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of alice or bob	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))
gender that is gender of person whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york)))
student whose university is university of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
relationship status that is not relationship status of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string !=) en.person.alice))
employee that has the largest end date	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose end date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
relationship status that is relationship status of at least two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
employee whose start date is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
gender that is gender of at least two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person that has the most number of gender	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string gender)))
student that has less than two university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string university) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
employee whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose birthdate is at most 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))))
person that is friends with alice or bob	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))
student whose start date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student that has the largest start date	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that has the most number of birthplace	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (string birthplace)))
employee whose end date is 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that less than two person is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
employee whose start date is birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student that has the least number of field of study	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string field_of_study))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
student whose end date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person whose height is 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (number 180 en.cm)))
person that alice not is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string !=) en.person.alice))
employee whose start date is 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose height is height of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height))))
person that has at least two relationship status	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >=) (number 2)))
person whose birthdate is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))
student whose university is not brown university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string university) (string !=) en.university.brown)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that has at most two gender	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string <=) (number 2)))
employee whose end date is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_end_date)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee that has the smallest start date	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose birthdate is smaller than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))
employee that has the largest start date	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose birthdate is 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1))))
gender that is gender of person whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male)))
person that has at least two birthplace	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >=) (number 2)))
student whose start date is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that has the smallest birthdate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))
gender that is gender of less than two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
person whose gender is male or female	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.gender.male en.gender.female)))
gender that is gender of more than two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
relationship status that is relationship status of more than two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
employee whose employer is not mckinsey	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employer) (string !=) en.company.mckinsey)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose birthdate is at least 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))
relationship status that is relationship status of less than two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
employee that has the most number of employer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee whose job title is not software engineer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string job_title) (string !=) en.job_title.software_engineer)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student that has the smallest end date	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string =) en.person.alice))
person that has the largest height	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))
gender that is gender of at most two person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
student that has the smallest start date	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose relationship status is relationship status of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string relationship_status))))
student whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
employee whose start date is at most 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string employment_start_date)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
employee that has less than two employer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string employer) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person whose birthdate is larger than 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (date 2004 -1 -1))))
student that has the largest end date	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string education_end_date)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
gender that is gender of person whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1))))
person that has more than two relationship status	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string >) (number 2)))
person whose height is not 180 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height) (string !=) (number 180 en.cm)))
student whose end date is 2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
gender that is gender of person whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single)))
person that has the largest birthdate	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string birthdate))))
person whose birthplace is not new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string !=) en.city.new_york))
start date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_start_date)))
person whose relationship status is single or married	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.relationship_status.single en.relationship_status.married)))
student whose end date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_end_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that has at least two gender	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >=) (number 2)))
person that alice is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) en.person.alice))
person whose gender is gender of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string gender))))
city that is birthplace of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) en.person.alice))
person that alice or bob is friends with	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string friend)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))
person that has more than two gender	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string >) (number 2)))
field of study of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string field_of_study)))
person whose relationship status is not single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string !=) en.relationship_status.single))
city that is not birthplace of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string !=) en.person.alice))
person that has the smallest height	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string height))))
person that has more than two birthplace	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string >) (number 2)))
student whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string education_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
city that is birthplace of alice or bob	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string birthplace)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))
employee that has the least number of job title	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string job_title))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
person that has two birthplace	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) (number 2)))
job title of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string job_title)))
person that not is friends with alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string friend) (string !=) en.person.alice))
person that has less than two relationship status	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string <) (number 2)))
end date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_end_date)))
person that has less than two birthplace	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string <) (number 2)))
start date of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employment_start_date)))
employee whose start date is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string employment_start_date) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
student that has the least number of university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string university))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string student))) (string student)))
person that has the least number of relationship status	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string relationship_status)))
person that has less than two gender	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string <) (number 2)))
person whose birthplace is new york	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthplace) (string =) en.city.new_york))
software engineer or program manager	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.job_title.software_engineer en.job_title.program_manager))
person that has two relationship status	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) (number 2)))
relationship status that is relationship status of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string relationship_status)) (string =) en.person.alice))
gender that is not gender of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string !=) en.person.alice))
end date of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string education_end_date)))
person that has the least number of gender	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string gender)))
gender that is gender of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) en.person.alice))
person whose birthdate is 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string =) (date 2004 -1 -1)))
person that has the least number of birthplace	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string min) (string birthplace)))
person whose relationship status is single	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string relationship_status) (string =) en.relationship_status.single))
person that is logged in	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string logged_in)))
person whose gender is male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) en.gender.male))
total height of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string sum) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))
university of student alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string student))) (string university)))
gender that is gender of alice or bob	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string gender)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob)))
person whose gender is not male	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string !=) en.gender.male))
person whose birthdate is not 2004	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string birthdate) (string !=) (date 2004 -1 -1)))
person that has two gender	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string gender) (string =) (number 2)))
employee that has the least number of employer	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string employer))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string employee))) (string employee)))
number of city	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.city) (string !type))))
number of university	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.university) (string !type))))
number of company	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.company) (string !type))))
brown university or ucla	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.university.brown en.university.ucla))
computer science or history	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.field.computer_science en.field.history))
mckinsey or google	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.company.mckinsey en.company.google))
number of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type))))
number of relationship status	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.relationship_status) (string !type))))
birthplace of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthplace)))
180 cm or 200 cm	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 180 en.cm) (number 200 en.cm)))
number of job title	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.job_title) (string !type))))
new york or beijing	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.city.new_york en.city.bejing))
male or female	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.gender.male en.gender.female))
employer of employee alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string employee))) (string employer)))
height of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string height)))
number of gender	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.gender) (string !type))))
relationship status of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string relationship_status)))
birthdate of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string birthdate)))
average height of person	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.person) (string !type)) (string height))))
2004 or 2010	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))
gender of alice	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.person.alice (string gender)))
single or married	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.relationship_status.single en.relationship_status.married))
alice or bob	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.person.alice en.person.bob))
number of field	(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.field) (string !type))))
